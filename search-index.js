var searchIndex = JSON.parse('{\
"extendr_api":{"doc":"A safe and user friendly R extension interface.","i":[[23,"extendr","extendr_api","Generate bindings for a single function.",null,null],[14,"extendr_module","","Define a module and export symbols to R Example:",null,null],[0,"error","","Error handling in Rust called from R.",null,null],[4,"Error","extendr_api::error","",null,null],[13,"Panic","","",0,null],[13,"NotFound","","",0,null],[13,"NotAVectorType","","",0,null],[13,"EvalError","","",0,null],[12,"code","extendr_api::error::Error","",1,null],[12,"error","","",1,null],[13,"ParseError","extendr_api::error","",0,null],[12,"code","extendr_api::error::Error","",2,null],[12,"status","","",2,null],[13,"Other","extendr_api::error","",0,null],[6,"Result","","",null,null],[0,"functions","extendr_api","",null,null],[5,"new_env","extendr_api::functions","Create a new, empty environment parented on global_env()",null,[[],["robj",4]]],[5,"new_env_with_capacity","","Create a new, empty environment parented on global_env()…",null,[[],["robj",4]]],[5,"global_var","","Get a global variable from global_env() and ancestors. If…",null,[[["into",8],["robj",4]],[["result",6],["robj",4]]]],[5,"local_var","","Get a local variable from current_env() and ancestors.",null,[[["into",8],["robj",4]],[["result",6],["robj",4]]]],[5,"global_function","","Get a global function from global_env() and ancestors.",null,[[["into",8],["robj",4]],[["option",4],["robj",4]]]],[5,"find_namespace","","Find a namespace by name.",null,[[["into",8],["robj",4]],[["option",4],["robj",4]]]],[5,"current_env","","The current interpreter environment.",null,[[],["robj",4]]],[5,"global_env","","The \\\"global\\\" environment",null,[[],["robj",4]]],[5,"empty_env","","An empty environment at the root of the environment tree",null,[[],["robj",4]]],[5,"base_env","","The base environment; formerly R_NilValue",null,[[],["robj",4]]],[5,"base_namespace","","The namespace for base.",null,[[],["robj",4]]],[5,"namespace_registry","","For registered namespaces.",null,[[],["robj",4]]],[5,"srcref","","Current srcref, for debuggers",null,[[],["robj",4]]],[5,"nil_value","","The nil object",null,[[],["robj",4]]],[5,"unbound_value","","Unbound marker",null,[[],["robj",4]]],[5,"missing_arg","","Missing argument marker",null,[[],["robj",4]]],[5,"base_symbol","","\\\"base\\\"",null,[[],["robj",4]]],[5,"brace_symbol","","\\\"{\\\"",null,[[],["robj",4]]],[5,"bracket_2_symbol","","\\\"[[\\\"",null,[[],["robj",4]]],[5,"bracket_symbol","","\\\"[\\\"",null,[[],["robj",4]]],[5,"class_symbol","","\\\"class\\\"",null,[[],["robj",4]]],[5,"device_symbol","","\\\".Device\\\"",null,[[],["robj",4]]],[5,"dimnames_symbol","","\\\"dimnames\\\"",null,[[],["robj",4]]],[5,"dim_symbol","","\\\"dim\\\"",null,[[],["robj",4]]],[5,"dollar_symbol","","\\\"$\\\"",null,[[],["robj",4]]],[5,"dots_symbol","","\\\"...\\\"",null,[[],["robj",4]]],[5,"double_colon_symbol","","\\\"::\\\"",null,[[],["robj",4]]],[5,"lastvalue_symbol","","\\\".Last.value\\\"",null,[[],["robj",4]]],[5,"levels_symbol","","\\\"levels\\\"",null,[[],["robj",4]]],[5,"mode_symbol","","\\\"mode\\\"",null,[[],["robj",4]]],[5,"na_rm_symbol","","\\\"na.rm\\\"",null,[[],["robj",4]]],[5,"name_symbol","","\\\"name\\\"",null,[[],["robj",4]]],[5,"names_symbol","","\\\"names\\\"",null,[[],["robj",4]]],[5,"namespace_env_symbol","","NAMESPACE_.\\\"",null,[[],["robj",4]]],[5,"package_symbol","","\\\"package\\\"",null,[[],["robj",4]]],[5,"previous_symbol","","\\\"previous\\\"",null,[[],["robj",4]]],[5,"quote_symbol","","\\\"quote\\\"",null,[[],["robj",4]]],[5,"row_names_symbol","","\\\"row.names\\\"",null,[[],["robj",4]]],[5,"seeds_symbol","","\\\".Random.seed\\\"",null,[[],["robj",4]]],[5,"sort_list_symbol","","\\\"sort.list\\\"",null,[[],["robj",4]]],[5,"source_symbol","","\\\"source\\\"",null,[[],["robj",4]]],[5,"spec_symbol","","\\\"spec\\\"",null,[[],["robj",4]]],[5,"tsp_symbol","","\\\"tsp\\\"",null,[[],["robj",4]]],[5,"triple_colon_symbol","","\\\":::\\\"",null,[[],["robj",4]]],[5,"dot_defined","","\\\".defined\\\"",null,[[],["robj",4]]],[5,"dot_method","","\\\".Method\\\"",null,[[],["robj",4]]],[5,"dot_package_name","","\\\"packageName\\\"",null,[[],["robj",4]]],[5,"dot_target","","\\\".target\\\"",null,[[],["robj",4]]],[5,"na_string","","NA_STRING as a CHARSXP",null,[[],["robj",4]]],[5,"blank_string","","\\\"\\\" as a CHARSXP",null,[[],["robj",4]]],[5,"blank_scalar_string","","\\\"\\\" as a STRSXP",null,[[],["robj",4]]],[5,"na_str","","Special \\\"NA\\\" string that represents null strings.",null,[[]]],[0,"iter","extendr_api","",null,null],[3,"ListIter","extendr_api::iter","",null,null],[3,"PairlistIter","","Iterator over the objects in a vector or string.",null,null],[3,"PairlistTagIter","","Iterator over pairlist tag names.",null,null],[3,"StrIter","","Iterator over strings or string factors.",null,null],[3,"EnvIter","","Iterator over the names and values of an environment",null,null],[6,"NamedListIter","","Iterator over name-value pairs in lists.",null,null],[6,"IntegerIter","","Iterator over primitives in integer objects.",null,null],[6,"RealIter","","Iterator over primitives in real objects.",null,null],[6,"LogicalIter","","Iterator over primitives in logical objects.",null,null],[11,"new","","",3,[[]]],[11,"new","","Make an empty list iterator.",4,[[]]],[11,"new","","Make an empty list iterator.",5,[[]]],[11,"new","","Make an empty str iterator.",6,[[]]],[0,"lang_macros","extendr_api","Argument parsing and checking.",null,null],[0,"logical","","",null,null],[3,"Bool","extendr_api::logical","Bool is a wrapper for i32 in the context of an R\'s…",null,null],[12,"0","","",7,null],[11,"to_bool","","Convert this Bool to a bool. Note NA will be true.",7,[[]]],[11,"from_bool","","Convert this construct a Bool from a rust boolean.",7,[[]]],[11,"is_true","","Test if TRUE",7,[[]]],[11,"is_false","","Test if FALSE",7,[[]]],[0,"matrix","extendr_api","Wrappers for matrices with deferred arithmetic.",null,null],[3,"RArray","extendr_api::matrix","Wrapper for creating and using matrices and arrays.",null,null],[6,"RColumn","","",null,null],[6,"RMatrix","","",null,null],[6,"RMatrix3D","","",null,null],[11,"data","","Get the underlying data fro this array.",8,[[]]],[11,"dim","","Get the dimensions for this array.",8,[[]]],[11,"new","","Make a new vector type.",8,[[]]],[11,"nrows","","Get the number of rows.",8,[[]]],[11,"new","","Make a new vector type.",9,[[]]],[11,"nrows","","Get the number of rows.",9,[[]]],[11,"new","","Create a new matrix wrapper.",8,[[]]],[11,"nrows","","Get the number of rows.",8,[[]]],[11,"ncols","","Get the number of columns.",8,[[]]],[11,"new","","Create a new matrix wrapper.",10,[[]]],[11,"nrows","","Get the number of rows.",10,[[]]],[11,"ncols","","Get the number of columns.",10,[[]]],[11,"new","","Create a new matrix wrapper.",8,[[]]],[11,"nrows","","Get the number of rows.",8,[[]]],[11,"ncols","","Get the number of columns.",8,[[]]],[11,"nsub","","Get the number of submatrices.",8,[[]]],[11,"new","","Create a new matrix wrapper.",11,[[]]],[11,"nrows","","Get the number of rows.",11,[[]]],[11,"ncols","","Get the number of columns.",11,[[]]],[11,"nsub","","Get the number of submatrices.",11,[[]]],[0,"metadata","extendr_api","Module metadata",null,null],[3,"Arg","extendr_api::metadata","Metadata function argument.",null,null],[12,"name","","",12,null],[12,"arg_type","","",12,null],[3,"Func","","Metadata function.",null,null],[12,"doc","","",13,null],[12,"name","","",13,null],[12,"args","","",13,null],[12,"return_type","","",13,null],[12,"func_ptr","","",13,null],[12,"hidden","","",13,null],[3,"Impl","","Metadata Impl.",null,null],[12,"doc","","",14,null],[12,"name","","",14,null],[12,"methods","","",14,null],[3,"Metadata","","Module metadata.",null,null],[12,"name","","",15,null],[12,"functions","","",15,null],[12,"impls","","",15,null],[11,"make_r_wrappers","","",15,[[],[["string",3],["result",6]]]],[0,"prelude","extendr_api","Common exports for extendr-api.This allows us to be more…",null,null],[0,"prelude","extendr_api::prelude","ndarray prelude.",null,null],[6,"ArcArray","extendr_api::prelude::prelude","An array where the data has shared ownership and is copy…",null,null],[6,"Array","","An array that owns its data uniquely.",null,null],[3,"ArrayBase","","An n-dimensional array.",null,null],[6,"ArrayView","","A read-only array view.",null,null],[6,"ArrayViewMut","","A read-write array view.",null,null],[6,"CowArray","","An array with copy-on-write behavior.",null,null],[6,"RawArrayView","","A read-only array view without a lifetime.",null,null],[6,"RawArrayViewMut","","A mutable array view without a lifetime.",null,null],[6,"RcArray","","An array where the data has shared ownership and is copy…",null,null],[3,"Axis","","An axis index.",null,null],[12,"0","","",16,null],[3,"Dim","","Dimension description.",null,null],[5,"Dim","","Create a new dimension value.",null,[[]]],[8,"Dimension","","Array shape and index trait.",null,null],[18,"NDIM","","For fixed-size dimension representations (e.g. `Ix2`),…",17,null],[16,"SliceArg","","`SliceArg` is the type which is used to specify slicing…",17,null],[16,"Pattern","","Pattern matching friendly form of the dimension value.",17,null],[16,"Smaller","","Next smaller dimension (if applicable)",17,null],[16,"Larger","","Next larger dimension",17,null],[10,"ndim","","Returns the number of dimensions (number of axes).",17,[[]]],[10,"into_pattern","","Convert the dimension into a pattern matching friendly…",17,[[]]],[11,"size","","Compute the size of the dimension (number of elements)",17,[[]]],[11,"size_checked","","Compute the size while checking for overflow.",17,[[],["option",4]]],[11,"as_array_view","","Borrow as a read-only array view.",17,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[11,"as_array_view_mut","","Borrow as a read-write array view.",17,[[],[["arraybase",3],["viewrepr",3],["dim",3]]]],[10,"zeros","","Creates a dimension of all zeros with the specified ndim.",17,[[]]],[11,"into_dyn","","Convert the dimensional into a dynamic dimensional (IxDyn).",17,[[],[["ixdynimpl",3],["dim",3]]]],[10,"__private__","","This trait is private to implement; this method exists to…",17,[[],["privatemarker",3]]],[6,"Array0","","zero-dimensional array",null,null],[6,"Array1","","one-dimensional array",null,null],[6,"Array2","","two-dimensional array",null,null],[6,"Array3","","three-dimensional array",null,null],[6,"Array4","","four-dimensional array",null,null],[6,"Array5","","five-dimensional array",null,null],[6,"Array6","","six-dimensional array",null,null],[6,"ArrayD","","dynamic-dimensional array",null,null],[6,"ArrayView0","","zero-dimensional array view",null,null],[6,"ArrayView1","","one-dimensional array view",null,null],[6,"ArrayView2","","two-dimensional array view",null,null],[6,"ArrayView3","","three-dimensional array view",null,null],[6,"ArrayView4","","four-dimensional array view",null,null],[6,"ArrayView5","","five-dimensional array view",null,null],[6,"ArrayView6","","six-dimensional array view",null,null],[6,"ArrayViewD","","dynamic-dimensional array view",null,null],[6,"ArrayViewMut0","","zero-dimensional read-write array view",null,null],[6,"ArrayViewMut1","","one-dimensional read-write array view",null,null],[6,"ArrayViewMut2","","two-dimensional read-write array view",null,null],[6,"ArrayViewMut3","","three-dimensional read-write array view",null,null],[6,"ArrayViewMut4","","four-dimensional read-write array view",null,null],[6,"ArrayViewMut5","","five-dimensional read-write array view",null,null],[6,"ArrayViewMut6","","six-dimensional read-write array view",null,null],[6,"ArrayViewMutD","","dynamic-dimensional read-write array view",null,null],[6,"Ix0","","zero-dimensionial",null,null],[5,"Ix0","","Create a zero-dimensional index",null,[[],["dim",3]]],[6,"Ix1","","one-dimensional",null,null],[5,"Ix1","","Create a one-dimensional index",null,[[],["dim",3]]],[6,"Ix2","","two-dimensional",null,null],[5,"Ix2","","Create a two-dimensional index",null,[[],["dim",3]]],[6,"Ix3","","three-dimensional",null,null],[5,"Ix3","","Create a three-dimensional index",null,[[],["dim",3]]],[6,"Ix4","","four-dimensional",null,null],[5,"Ix4","","Create a four-dimensional index",null,[[],["dim",3]]],[6,"Ix5","","five-dimensional",null,null],[5,"Ix5","","Create a five-dimensional index",null,[[],["dim",3]]],[6,"Ix6","","six-dimensional",null,null],[5,"Ix6","","Create a six-dimensional index",null,[[],["dim",3]]],[6,"IxDyn","","dynamic-dimensional",null,null],[5,"IxDyn","","Create a dynamic-dimensional index",null,[[],[["ixdynimpl",3],["dim",3]]]],[5,"arr0","","Create a zero-dimensional array with the element `x`.",null,[[],[["arraybase",3],["dim",3],["ownedrepr",3]]]],[5,"arr1","","Create a one-dimensional array with elements from `xs`.",null,[[],[["dim",3],["ownedrepr",3],["arraybase",3]]]],[5,"arr2","","Create a two-dimensional array with elements from `xs`.",null,[[],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[5,"aview0","","Create a zero-dimensional array view borrowing `x`.",null,[[],[["viewrepr",3],["dim",3],["arraybase",3]]]],[5,"aview1","","Create a one-dimensional array view with elements…",null,[[],[["arraybase",3],["viewrepr",3],["dim",3]]]],[5,"aview2","","Create a two-dimensional array view with elements…",null,[[],[["viewrepr",3],["arraybase",3],["dim",3]]]],[5,"aview_mut1","","Create a one-dimensional read-write array view with…",null,[[],[["viewrepr",3],["dim",3],["arraybase",3]]]],[14,"array","","Create an `Array` with one, two or three dimensions.",null,null],[14,"azip","","Array zip macro: lock step function application across…",null,null],[14,"s","","Slice argument constructor.",null,null],[8,"ShapeBuilder","","A trait for `Shape` and `D where D: Dimension` that allows…",null,null],[16,"Dim","","",18,null],[16,"Strides","","",18,null],[10,"into_shape","","",18,[[],["shape",3]]],[10,"f","","",18,[[],["shape",3]]],[10,"set_f","","",18,[[],["shape",3]]],[10,"strides","","",18,[[],["strideshape",3]]],[8,"AsArray","","Argument conversion into an array view",null,null],[8,"NdFloat","","Floating-point element types `f32` and `f64`.",null,null],[6,"Ix","extendr_api::prelude","Array index type",null,null],[6,"Ixs","","Array index type (signed)",null,null],[3,"ArrayBase","","An n-dimensional array.",null,null],[6,"RcArray","","An array where the data has shared ownership and is copy…",null,null],[6,"ArcArray","","An array where the data has shared ownership and is copy…",null,null],[6,"Array","","An array that owns its data uniquely.",null,null],[6,"CowArray","","An array with copy-on-write behavior.",null,null],[6,"ArrayView","","A read-only array view.",null,null],[6,"ArrayViewMut","","A read-write array view.",null,null],[6,"RawArrayView","","A read-only array view without a lifetime.",null,null],[6,"RawArrayViewMut","","A mutable array view without a lifetime.",null,null],[3,"OwnedArcRepr","","ArcArray\'s representation.",null,null],[3,"RawViewRepr","","Array pointer’s representation.",null,null],[3,"ViewRepr","","Array view’s representation.",null,null],[4,"CowRepr","","CowArray\'s representation.",null,null],[13,"View","","Borrowed data.",19,null],[13,"Owned","","Owned data.",19,null],[0,"linalg","","Linear algebra.",null,null],[5,"general_mat_mul","extendr_api::prelude::linalg","General matrix-matrix multiplication.",null,[[["arraybase",3],["arraybase",3],["arraybase",3]]]],[5,"general_mat_vec_mul","","General matrix-vector multiplication.",null,[[["arraybase",3],["arraybase",3],["arraybase",3]]]],[8,"Dot","","Matrix Multiplication",null,null],[16,"Output","","The result of the operation.",20,null],[10,"dot","","",20,[[]]],[3,"Shape","extendr_api::prelude","A contiguous array shape of n dimensions.",null,null],[3,"StrideShape","","An array shape of n dimensions in c-order, f-order or…",null,null],[3,"Axis","","An axis index.",null,null],[12,"0","","",16,null],[3,"AxisDescription","","Description of the axis, its length and its stride.",null,null],[12,"0","","",21,null],[12,"1","","",21,null],[12,"2","","",21,null],[8,"Dimension","","Array shape and index trait.",null,null],[18,"NDIM","","For fixed-size dimension representations (e.g. `Ix2`),…",17,null],[16,"SliceArg","","`SliceArg` is the type which is used to specify slicing…",17,null],[16,"Pattern","","Pattern matching friendly form of the dimension value.",17,null],[16,"Smaller","","Next smaller dimension (if applicable)",17,null],[16,"Larger","","Next larger dimension",17,null],[10,"ndim","","Returns the number of dimensions (number of axes).",17,[[]]],[10,"into_pattern","","Convert the dimension into a pattern matching friendly…",17,[[]]],[11,"size","","Compute the size of the dimension (number of elements)",17,[[]]],[11,"size_checked","","Compute the size while checking for overflow.",17,[[],["option",4]]],[11,"as_array_view","","Borrow as a read-only array view.",17,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[11,"as_array_view_mut","","Borrow as a read-write array view.",17,[[],[["arraybase",3],["viewrepr",3],["dim",3]]]],[10,"zeros","","Creates a dimension of all zeros with the specified ndim.",17,[[]]],[11,"into_dyn","","Convert the dimensional into a dynamic dimensional (IxDyn).",17,[[],[["ixdynimpl",3],["dim",3]]]],[10,"__private__","","This trait is private to implement; this method exists to…",17,[[],["privatemarker",3]]],[8,"IntoDimension","","Argument conversion a dimension.",null,null],[16,"Dim","","",22,null],[10,"into_dimension","","",22,[[]]],[8,"RemoveAxis","","Array shape with a next smaller dimension.",null,null],[10,"remove_axis","","",23,[[["axis",3]]]],[3,"IxDynImpl","","Dynamic dimension or index type.",null,null],[8,"NdIndex","","Tuple or fixed size arrays that can be used to index an…",null,null],[4,"ErrorKind","","Error code for an error related to array shape or layout.",null,null],[13,"IncompatibleShape","","incompatible shape",24,null],[13,"IncompatibleLayout","","incompatible memory layout",24,null],[13,"RangeLimited","","the shape does not fit inside type limits",24,null],[13,"OutOfBounds","","out of bounds indexing",24,null],[13,"Unsupported","","aliasing array elements",24,null],[13,"Overflow","","overflow when computing offset, length, etc.",24,null],[3,"ShapeError","","An error related to array shape or layout.",null,null],[5,"indices","","Create an iterable of the array shape `shape`.",null,[[],["indices",3]]],[5,"indices_of","","Return an iterable of the indices of the passed-in array.",null,[[["arraybase",3]],["indices",3]]],[3,"Slice","","A slice (range with step size).",null,null],[12,"start","","",25,null],[12,"end","","",25,null],[12,"step","","",25,null],[3,"SliceInfo","","Represents all of the necessary information to perform a…",null,null],[4,"SliceOrIndex","","A slice (range with step) or an index.",null,null],[13,"Slice","","A range with step size. `end` is an exclusive index.…",26,null],[12,"start","extendr_api::prelude::SliceOrIndex","",27,null],[12,"end","","",27,null],[12,"step","","",27,null],[13,"Index","extendr_api::prelude","A single index.",26,null],[8,"AsArray","","Argument conversion into an array view",null,null],[8,"LinalgScalar","","Elements that support linear algebra operations.",null,null],[8,"NdFloat","","Floating-point element types `f32` and `f64`.",null,null],[5,"stack","","Stack arrays along the given axis.",null,[[["axis",3]],[["result",4],["shapeerror",3],["arraybase",3]]]],[14,"stack","","Stack arrays along the given axis.",null,null],[8,"IndexLonger","","Extra indexing methods for array views",null,null],[16,"Output","","The type of the reference to the element that is produced,…",28,null],[10,"index","","Get a reference of a element through the view.",28,[[]]],[10,"get","","Get a reference of a element through the view.",28,[[],["option",4]]],[10,"uget","","Get a reference of a element through the view without…",28,[[]]],[8,"ShapeBuilder","","A trait for `Shape` and `D where D: Dimension` that allows…",null,null],[16,"Dim","","",18,null],[16,"Strides","","",18,null],[10,"into_shape","","",18,[[],["shape",3]]],[10,"f","","",18,[[],["shape",3]]],[10,"set_f","","",18,[[],["shape",3]]],[10,"strides","","",18,[[],["strideshape",3]]],[8,"AssignElem","","A producer element that can be assigned to once",null,null],[10,"assign_elem","","Assign the value `input` to the element that self…",29,[[]]],[8,"Data","","Array representation trait.",null,null],[8,"DataClone","","Array representation trait.",null,null],[8,"DataMut","","Array representation trait.",null,null],[8,"DataOwned","","Array representation trait.",null,null],[8,"DataShared","","Array representation trait.",null,null],[8,"RawData","","Array representation trait.",null,null],[16,"Elem","","The array element type.",30,null],[10,"__private__","","This trait is private to implement; this method exists to…",30,[[],["privatemarker",3]]],[8,"RawDataClone","","Array representation trait.",null,null],[8,"RawDataMut","","Array representation trait.",null,null],[8,"RawDataSubst","","Array representation trait.",null,null],[16,"Output","","The resulting array storage of the same kind but…",31,null],[14,"array","","Create an `Array` with one, two or three dimensions.",null,null],[0,"iter","","Producers, iterables and iterators.",null,null],[3,"Axes","extendr_api::prelude::iter","An iterator over the length and stride of each axis of an…",null,null],[3,"Indices","","Indices producer and iterable.",null,null],[3,"IndicesIter","","An iterator over the indexes of an array shape.",null,null],[3,"AxisChunksIter","","An iterator that traverses over the specified axis and…",null,null],[3,"AxisChunksIterMut","","An iterator that traverses over the specified axis and…",null,null],[3,"AxisIter","","An iterator that traverses over an axis and and yields…",null,null],[3,"AxisIterMut","","An iterator that traverses over an axis and and yields…",null,null],[3,"ExactChunks","","Exact chunks producer and iterable.",null,null],[3,"ExactChunksIter","","Exact chunks iterator.",null,null],[3,"ExactChunksIterMut","","Exact chunks iterator.",null,null],[3,"ExactChunksMut","","Exact chunks producer and iterable.",null,null],[3,"IndexedIter","","An iterator over the indexes and elements of an array.",null,null],[3,"IndexedIterMut","","An iterator over the indexes and elements of an array…",null,null],[3,"Iter","","An iterator over the elements of an array.",null,null],[3,"IterMut","","An iterator over the elements of an array (mutable).",null,null],[3,"Lanes","","See `.lanes()` for more information.",null,null],[3,"LanesIter","","An iterator that traverses over all axes but one, and…",null,null],[3,"LanesIterMut","","An iterator that traverses over all dimensions but the…",null,null],[3,"LanesMut","","See `.lanes_mut()` for more information.",null,null],[3,"Windows","","Window producer and iterable",null,null],[14,"s","extendr_api::prelude","Slice argument constructor.",null,null],[14,"azip","","Array zip macro: lock step function application across…",null,null],[4,"FoldWhile","","Value controlling the execution of `.fold_while` on `Zip`.",null,null],[13,"Continue","","Continue folding with this value",32,null],[13,"Done","","Fold is complete and will return this value",32,null],[8,"IntoNdProducer","","Argument conversion into a producer.",null,null],[16,"Item","","The element produced per iteration.",33,null],[16,"Dim","","Dimension type of the producer",33,null],[16,"Output","","",33,null],[10,"into_producer","","Convert the value into an `NdProducer`.",33,[[]]],[8,"NdProducer","","A producer of an n-dimensional set of elements; for…",null,null],[16,"Item","","The element produced per iteration.",34,null],[16,"Dim","","Dimension type",34,null],[10,"__private__","","This trait is private to implement; this method exists to…",34,[[],["privatemarker",3]]],[3,"Zip","","Lock step function application across several arrays or…",null,null],[3,"OwnedRepr","","Array\'s representation.",null,null],[3,"OwnedRcRepr","","ArcArray\'s representation.",null,null],[8,"ScalarOperand","","Elements that can be used as direct operands in arithmetic…",null,null],[5,"Dim","","Create a new dimension value.",null,[[]]],[5,"Ix0","","Create a zero-dimensional index",null,[[],["dim",3]]],[5,"Ix1","","Create a one-dimensional index",null,[[],["dim",3]]],[5,"Ix2","","Create a two-dimensional index",null,[[],["dim",3]]],[5,"Ix3","","Create a three-dimensional index",null,[[],["dim",3]]],[5,"Ix4","","Create a four-dimensional index",null,[[],["dim",3]]],[5,"Ix5","","Create a five-dimensional index",null,[[],["dim",3]]],[5,"Ix6","","Create a six-dimensional index",null,[[],["dim",3]]],[5,"IxDyn","","Create a dynamic-dimensional index",null,[[],[["ixdynimpl",3],["dim",3]]]],[6,"Ix0","","zero-dimensionial",null,null],[6,"Ix1","","one-dimensional",null,null],[6,"Ix2","","two-dimensional",null,null],[6,"Ix3","","three-dimensional",null,null],[6,"Ix4","","four-dimensional",null,null],[6,"Ix5","","five-dimensional",null,null],[6,"Ix6","","six-dimensional",null,null],[6,"IxDyn","","dynamic-dimensional",null,null],[6,"Array0","","zero-dimensional array",null,null],[6,"Array1","","one-dimensional array",null,null],[6,"Array2","","two-dimensional array",null,null],[6,"Array3","","three-dimensional array",null,null],[6,"Array4","","four-dimensional array",null,null],[6,"Array5","","five-dimensional array",null,null],[6,"Array6","","six-dimensional array",null,null],[6,"ArrayD","","dynamic-dimensional array",null,null],[6,"ArrayView0","","zero-dimensional array view",null,null],[6,"ArrayView1","","one-dimensional array view",null,null],[6,"ArrayView2","","two-dimensional array view",null,null],[6,"ArrayView3","","three-dimensional array view",null,null],[6,"ArrayView4","","four-dimensional array view",null,null],[6,"ArrayView5","","five-dimensional array view",null,null],[6,"ArrayView6","","six-dimensional array view",null,null],[6,"ArrayViewD","","dynamic-dimensional array view",null,null],[6,"ArrayViewMut0","","zero-dimensional read-write array view",null,null],[6,"ArrayViewMut1","","one-dimensional read-write array view",null,null],[6,"ArrayViewMut2","","two-dimensional read-write array view",null,null],[6,"ArrayViewMut3","","three-dimensional read-write array view",null,null],[6,"ArrayViewMut4","","four-dimensional read-write array view",null,null],[6,"ArrayViewMut5","","five-dimensional read-write array view",null,null],[6,"ArrayViewMut6","","six-dimensional read-write array view",null,null],[6,"ArrayViewMutD","","dynamic-dimensional read-write array view",null,null],[6,"RcArray1","","one-dimensional shared ownership array",null,null],[6,"RcArray2","","two-dimensional shared ownership array",null,null],[6,"ArcArray1","","one-dimensional shared ownership array",null,null],[6,"ArcArray2","","two-dimensional shared ownership array",null,null],[5,"arr0","","Create a zero-dimensional array with the element `x`.",null,[[],[["arraybase",3],["dim",3],["ownedrepr",3]]]],[5,"arr1","","Create a one-dimensional array with elements from `xs`.",null,[[],[["dim",3],["ownedrepr",3],["arraybase",3]]]],[5,"rcarr1","","Create a one-dimensional array with elements from `xs`.",null,[[],[["ownedarcrepr",3],["dim",3],["arraybase",3]]]],[5,"aview0","","Create a zero-dimensional array view borrowing `x`.",null,[[],[["viewrepr",3],["dim",3],["arraybase",3]]]],[5,"aview1","","Create a one-dimensional array view with elements…",null,[[],[["arraybase",3],["viewrepr",3],["dim",3]]]],[5,"aview2","","Create a two-dimensional array view with elements…",null,[[],[["viewrepr",3],["arraybase",3],["dim",3]]]],[5,"aview_mut1","","Create a one-dimensional read-write array view with…",null,[[],[["viewrepr",3],["dim",3],["arraybase",3]]]],[5,"aview_mut2","","Create a two-dimensional read-write array view with…",null,[[],[["viewrepr",3],["arraybase",3],["dim",3]]]],[8,"FixedInitializer","","Fixed-size array used for array initialization",null,null],[16,"Elem","","",35,null],[10,"as_init_slice","","",35,[[]]],[10,"len","","",35,[[]]],[5,"arr2","","Create a two-dimensional array with elements from `xs`.",null,[[],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[5,"rcarr2","","Create a two-dimensional array with elements from `xs`.",null,[[],[["dim",3],["arraybase",3],["ownedarcrepr",3]]]],[5,"arr3","","Create a three-dimensional array with elements from `xs`.",null,[[],[["dim",3],["ownedrepr",3],["arraybase",3]]]],[5,"rcarr3","","Create a three-dimensional array with elements from `xs`.",null,[[],[["ownedarcrepr",3],["dim",3],["arraybase",3]]]],[3,"Dim","","Dimension description.",null,null],[23,"extendr","","Generate bindings for a single function.",null,null],[14,"extendr_module","","Define a module and export symbols to R Example:",null,null],[8,"RobjItertools","","Extensions to iterators for R objects including…",null,null],[11,"collect_robj","","Convert a wide range of iterators to Robj.",36,[[],["robj",4]]],[0,"rmacros","extendr_api","rmacros - a set of macros to call actual R functions in a…",null,null],[0,"robj","","R object handling.",null,null],[4,"Robj","extendr_api::robj","Wrapper for an R S-expression pointer (SEXP).",null,null],[11,"collect_robj","extendr_api::prelude","Convert a wide range of iterators to Robj.",36,[[],["robj",4]]],[11,"dollar","extendr_api::robj","Do the equivalent of x$y",37,[[],[["result",6],["robj",4]]]],[11,"slice","","Do the equivalent of `x[y]`",37,[[],[["result",6],["robj",4]]]],[11,"index","","Do the equivalent of `x[[y]]`",37,[[],[["result",6],["robj",4]]]],[11,"tilde","","Do the equivalent of x ~ y",37,[[],[["result",6],["robj",4]]]],[11,"double_colon","","Do the equivalent of x :: y",37,[[],[["result",6],["robj",4]]]],[11,"is_null","","Return true if this is the null object.",37,[[]]],[11,"is_symbol","","Return true if this is a symbol.",37,[[]]],[11,"is_logical","","Return true if this is a boolean (logical) vector",37,[[]]],[11,"is_real","","Return true if this is a real (f64) vector.",37,[[]]],[11,"is_complex","","Return true if this is a complex vector.",37,[[]]],[11,"is_expr","","Return true if this is an expression.",37,[[]]],[11,"is_environment","","Return true if this is an environment.",37,[[]]],[11,"is_promise","","Return true if this is an environment.",37,[[]]],[11,"is_string","","Return true if this is a string.",37,[[]]],[11,"is_object","","Return true if this is an object.",37,[[]]],[11,"get_current_srcref","","Get the source ref.",37,[[],["robj",4]]],[11,"get_src_filename","","Get the source filename.",37,[[],["robj",4]]],[11,"as_char","","Convert to a string vector.",37,[[],["robj",4]]],[11,"coerce_vector","","Convert to vectors of many kinds.",37,[[],["robj",4]]],[11,"pair_to_vector_list","","Convert a pairlist (LISTSXP) to a vector list (VECSXP).",37,[[],["robj",4]]],[11,"vector_to_pair_list","","Convert a vector list (VECSXP) to a pair list (LISTSXP)",37,[[],["robj",4]]],[11,"as_character_factor","","Convert a factor to a string vector.",37,[[],["robj",4]]],[11,"alloc_matrix","","Allocate a matrix object.",37,[[["sexptype",6]],["robj",4]]],[11,"duplicate","","Compatible way to duplicate an object. Use obj.clone()…",37,[[]]],[11,"find_function","","Find a function in an environment ignoring other variables.",37,[[["into",8],["robj",4]],[["option",4],["robj",4]]]],[11,"find_var","","Find a variable in an environment.",37,[[["into",8],["robj",4]],[["option",4],["robj",4]]]],[11,"eval_promise","","If this object is a promise, evaluate it, otherwise return…",37,[[],[["result",6],["robj",4]]]],[11,"ncols","","Number of columns of a matrix",37,[[]]],[11,"nrows","","Number of rows of a matrix",37,[[]]],[11,"xlengthgets","","Copy a vector and resize it. See.…",37,[[],[["result",6],["robj",4]]]],[11,"alloc_vector","","Allocated an owned object of a certain type.",37,[[],["robj",4]]],[11,"conformable","","Return true if two arrays have identical dims.",37,[[["robj",4]]]],[11,"is_array","","Return true if this is an array.",37,[[]]],[11,"is_factor","","Return true if this is factor.",37,[[]]],[11,"is_frame","","Return true if this is a data frame.",37,[[]]],[11,"is_function","","Return true if this is a function.",37,[[]]],[11,"is_integer","","Return true if this is an integer vector (INTSXP) but not…",37,[[]]],[11,"is_language","","Return true if this is a language object (LANGSXP).",37,[[]]],[11,"is_pairlist","","Return true if this is NILSXP or LISTSXP.",37,[[]]],[11,"is_matrix","","Return true if this is a matrix.",37,[[]]],[11,"is_list","","Return true if this is NILSXP or VECSXP.",37,[[]]],[11,"is_number","","Return true if this is INTSXP, LGLSXP or REALSXP but not a…",37,[[]]],[11,"is_primitive","","Return true if this is a primitive function BUILTINSXP,…",37,[[]]],[11,"is_ts","","Return true if this is a time series vector (see tsp).",37,[[]]],[11,"is_user_binop","","Return true if this is a user defined binop.",37,[[]]],[11,"is_valid_string","","Return true if this is a valid string.",37,[[]]],[11,"is_valid_string_f","","Return true if this is a valid string.",37,[[]]],[11,"is_vector","","Return true if this is a vector.",37,[[]]],[11,"is_vector_atomic","","Return true if this is an atomic vector.",37,[[]]],[11,"is_vector_list","","Return true if this is a vector list.",37,[[]]],[11,"is_vectorizable","","Return true if this is can be made into a vector.",37,[[]]],[11,"is_missing_arg","","",37,[[]]],[11,"is_unbound_value","","",37,[[]]],[11,"is_package_env","","",37,[[]]],[11,"package_env_name","","",37,[[],["robj",4]]],[11,"is_namespace_env","","",37,[[]]],[11,"namespace_env_spec","","",37,[[],["robj",4]]],[8,"FromRobj","","Trait used for incomming parameter conversion.",null,null],[11,"from_robj","","",38,[[["robj",4]],["result",4]]],[8,"ToVectorValue","","`ToVectorValue` is a trait that allows many different…",null,null],[11,"sexptype","","",39,[[],["sexptype",6]]],[11,"to_real","","",39,[[]]],[11,"to_integer","","",39,[[]]],[11,"to_logical","","",39,[[]]],[11,"to_raw","","",39,[[]]],[11,"to_sexp","","",39,[[],["sexp",6]]],[8,"RobjItertools","","Extensions to iterators for R objects including…",null,null],[11,"collect_robj","extendr_api::prelude","Convert a wide range of iterators to Robj.",36,[[],["robj",4]]],[8,"AsTypedSlice","extendr_api::robj","Generic access to typed slices in an Robj.",null,null],[11,"as_typed_slice","","",40,[[],["option",4]]],[11,"as_typed_slice_mut","","",40,[[],["option",4]]],[11,"len","","Get the extended length of the object.",37,[[]]],[11,"local","","Get a variable from an enviroment, but not its ancestors.",37,[[["into",8],["robj",4]],[["option",4],["robj",4]]]],[11,"set_local","","Set or define a variable in an enviroment.",37,[[["into",8],["robj",4]]]],[11,"parent","","Get the parent of an environment.",37,[[],[["option",4],["robj",4]]]],[11,"is_na","","Is this object is an NA scalar? Works for character,…",37,[[]]],[11,"as_integer_slice","","Get a read-only reference to the content of an integer…",37,[[],["option",4]]],[11,"as_integer_iter","","Get an iterator over integer elements of this slice.",37,[[],[["integeriter",6],["option",4]]]],[11,"as_integer_vector","","Get a Vec copied from the object.",37,[[],[["option",4],["vec",3]]]],[11,"as_logical_slice","","Get a read-only reference to the content of a logical…",37,[[],["option",4]]],[11,"as_logical_vector","","Get a Vec copied from the object using the tri-state…",37,[[],[["option",4],["vec",3]]]],[11,"as_logical_iter","","Get an iterator over logical elements of this slice.",37,[[],[["option",4],["logicaliter",6]]]],[11,"as_real_slice","","Get a read-only reference to the content of a double…",37,[[],["option",4]]],[11,"as_real_iter","","Get an iterator over real elements of this slice.",37,[[],[["option",4],["realiter",6]]]],[11,"as_real_vector","","Get a Vec copied from the object.",37,[[],[["vec",3],["option",4]]]],[11,"as_raw_slice","","Get a read-only reference to the content of an integer or…",37,[[],["option",4]]],[11,"as_integer_slice_mut","","Get a read-write reference to the content of an integer or…",37,[[],["option",4]]],[11,"as_real_slice_mut","","Get a read-write reference to the content of a double…",37,[[],["option",4]]],[11,"as_raw_slice_mut","","Get a read-write reference to the content of a raw vector.",37,[[],["option",4]]],[11,"as_string_vector","","Get a vector of owned strings. Owned strings have long…",37,[[],[["vec",3],["option",4]]]],[11,"as_str_vector","","Get a vector of string references. String references…",37,[[],[["vec",3],["option",4]]]],[11,"as_str","","Get a read-only reference to a scalar string type.",37,[[],["option",4]]],[11,"as_integer","","Get a scalar integer.",37,[[],["option",4]]],[11,"as_real","","Get a scalar real.",37,[[],["option",4]]],[11,"as_bool","","Get a scalar rust boolean.",37,[[],["option",4]]],[11,"as_logical","","Get a scalar boolean as a tri-boolean [Bool] value.",37,[[],[["bool",3],["option",4]]]],[11,"eval","","Evaluate the expression in R and return an error or an R…",37,[[],[["result",6],["robj",4]]]],[11,"eval_blind","","Evaluate the expression and return NULL or an R object.",37,[[],["robj",4]]],[11,"parse","","Parse a string into an R executable object",37,[[],[["result",6],["robj",4]]]],[11,"eval_string","","Parse a string into an R executable object and run it.",37,[[],[["result",6],["robj",4]]]],[11,"is_owned","","Return true if the object is owned by this wrapper. If so,…",37,[[]]],[11,"get_attrib","","Get a specific attribute as a borrowed robj if it exists.",37,[[],[["option",4],["robj",4]]]],[11,"set_attrib","","Set a specific attribute and return the value.",37,[[],["robj",4]]],[11,"names","","Get the names attribute as a string iterator if one exists.",37,[[],[["option",4],["striter",3]]]],[11,"dim","","Get the dim attribute as an integer iterator if one exists.",37,[[],[["integeriter",6],["option",4]]]],[11,"dimnames","","Get the dimnames attribute as a list iterator if one exists.",37,[[],[["option",4],["listiter",3]]]],[11,"as_named_list_iter","","Return an iterator over names and values of a list if they…",37,[[],[["namedlistiter",6],["option",4]]]],[11,"class","","Get the class attribute as a string iterator if one exists.",37,[[],[["option",4],["striter",3]]]],[11,"inherits","","Return true if this class inherits this class.",37,[[]]],[11,"levels","","Get the levels attribute as a string iterator if one exists.",37,[[],[["option",4],["striter",3]]]],[11,"ls","","Get the names in an environment.",37,[[],[["vec",3],["option",4]]]],[0,"thread_safety","extendr_api","Provide limited protection for multithreaded access to the…",null,null],[5,"this_thread_id","extendr_api::thread_safety","",null,[[]]],[5,"single_threaded","","Run a function single threaded. Note: This will fail badly…",null,[[]]],[5,"throw_r_error","","",null,[[["asref",8]]]],[5,"catch_r_error","","Wrap an R function such as Rf_findFunction and convert…",null,[[],[["sexp",6],["result",6]]]],[0,"wrapper","extendr_api","Wrappers are lightweight proxies for references to R…",null,null],[3,"Character","extendr_api::wrapper","Wrapper for creating character objects. These are used…",null,null],[12,"0","","",41,null],[3,"Raw","","Wrapper for creating raw (byte) objects.",null,null],[12,"0","","",42,null],[3,"Lang","","Wrapper for creating language objects.",null,null],[12,"0","","",43,null],[3,"Pairlist","","Wrapper for creating pair list (LISTSXP) objects.",null,null],[12,"names_and_values","","",44,null],[3,"List","","Wrapper for creating list (VECSXP) objects.",null,null],[12,"0","","",45,null],[3,"Expr","","Wrapper for creating expression objects.",null,null],[12,"0","","",46,null],[3,"Env","","Wrapper for creating environments.",null,null],[12,"parent","","",47,null],[12,"names_and_values","","",47,null],[3,"Func","","Wrapper for creating functions (CLOSSXP).",null,null],[12,"formals","","",48,null],[12,"body","","",48,null],[12,"env","","",48,null],[3,"Promise","","",null,null],[12,"code","","",49,null],[12,"env","","",49,null],[12,"value","","",49,null],[12,"seen","","",49,null],[3,"Primitive","","Wrapper for creating and reading Primitive functions.",null,null],[12,"0","","",50,null],[8,"SymPair","","",null,null],[10,"sym_pair","","",51,[[]]],[11,"as_symbol","extendr_api::robj","Convert a symbol object to a Symbol wrapper.",37,[[],[["option",4],["symbol",3]]]],[11,"as_character","","Convert a character object to a Character wrapper.",37,[[],[["character",3],["option",4]]]],[11,"as_raw","","Convert a raw object to a Character wrapper.",37,[[],[["option",4],["raw",3]]]],[11,"as_lang","","Convert a language object to a Lang wrapper.",37,[[],[["option",4],["lang",3]]]],[11,"as_pairlist","","Convert a pair list object (LISTSXP) to a Pairlist wrapper.",37,[[],[["option",4],["pairlist",3]]]],[11,"as_list","","Convert a list object (VECSXP) to a List wrapper.",37,[[],[["list",3],["option",4]]]],[11,"as_expr","","Convert an expression object (EXPRSXP) to a Expr wrapper.",37,[[],[["expr",3],["option",4]]]],[11,"as_environment","","Convert an environment object (ENVSXP) to a Env wrapper.",37,[[],[["option",4],["env",3]]]],[11,"as_func","","Convert a function object (CLOSXP) to a Func wrapper.",37,[[],[["option",4],["func",3]]]],[11,"as_promise","","Get a wrapper for a promise.",37,[[],[["option",4],["promise",3]]]],[0,"robj_ndarray","extendr_api","",null,null],[17,"TRUE","","TRUE value eg. `r!(TRUE)`",null,null],[17,"FALSE","","FALSE value eg. `r!(FALSE)`",null,null],[17,"NULL","","NULL value eg. `r!(NULL)`",null,null],[17,"NA_INTEGER","","NA value for integers eg. `r!(NA_INTEGER)`",null,null],[17,"NA_REAL","","NA value for real values eg. `r!(NA_REAL)`",null,null],[17,"NA_STRING","","NA value for strings. `r!(NA_STRING)`",null,null],[17,"NA_LOGICAL","","NA value for logical. `r!(NA_LOGICAL)`",null,null],[8,"IsNA","","Return true if this primitive is NA.",null,null],[10,"is_na","","",52,[[]]],[14,"call","","The call! macro calls an R function with Rust parameters.…",null,null],[14,"lang","","A macro for constructing R langage objects.",null,null],[14,"r","","Convert a rust expression to an R object.",null,null],[14,"R","","Call inline R source code from Rust.",null,null],[14,"var","","Get a local variable from the calling function or a global…",null,null],[14,"global","","Get a global variable.",null,null],[14,"sym","","The sym! macro install symbols. You should cache your…",null,null],[14,"c","","Concatenation operator.",null,null],[14,"rep","","Create a vector with repeating elements.",null,null],[14,"read_table","","Read a CSV file.",null,null],[14,"list","","Create a list.",null,null],[14,"data_frame","","Create a dataframe.",null,null],[14,"factor","","Create a factor.",null,null],[14,"rprint","","Print via the R output stream.",null,null],[14,"rprintln","","Print with a newline via the R output stream.",null,null],[14,"reprint","","Print via the R error stream.",null,null],[14,"reprintln","","Print with a newline via the R output stream.",null,null],[14,"test","","Macro for running tests.",null,null],[11,"from","extendr_api::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","extendr_api::iter","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","extendr_api::logical","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","extendr_api::matrix","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","extendr_api::metadata","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","extendr_api::prelude","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_producer","","",54,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"index_checked","","",55,[[],["option",4]]],[11,"index_unchecked","","",55,[[]]],[11,"into_shape","","",55,[[],["shape",3]]],[11,"f","","",55,[[],["shape",3]]],[11,"set_f","","",55,[[],["shape",3]]],[11,"strides","","",55,[[],["strideshape",3]]],[11,"into_dimension","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_shape","","",59,[[],["shape",3]]],[11,"f","","",59,[[],["shape",3]]],[11,"set_f","","",59,[[],["shape",3]]],[11,"strides","","",59,[[],["strideshape",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_shape","","",61,[[],["shape",3]]],[11,"f","","",61,[[],["shape",3]]],[11,"set_f","","",61,[[],["shape",3]]],[11,"strides","","",61,[[],["strideshape",3]]],[11,"into_dimension","","",61,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","extendr_api::prelude::iter","",64,[[]]],[11,"into","","",64,[[]]],[11,"into_iter","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"into_iter","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_producer","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"into_iter","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"into_iter","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"into_iter","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"into_iter","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_producer","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"into_iter","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_producer","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"into_iter","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_producer","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"into_iter","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"into_iter","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_producer","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"into_iter","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"into_iter","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"into_iter","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"into_iter","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_producer","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"into_iter","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"into_iter","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"into_iter","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_producer","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"into_iter","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_producer","","",83,[[]]],[11,"from","extendr_api::prelude","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","extendr_api::robj","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","extendr_api::wrapper","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"div_assign","extendr_api::prelude","",54,[[["arraybase",3]]]],[11,"div_assign","","",54,[[]]],[11,"mul_assign","","",54,[[]]],[11,"mul_assign","","",55,[[["dim",3]]]],[11,"mul_assign","","",54,[[["arraybase",3]]]],[11,"mul_assign","","",55,[[["dim",3]]]],[11,"mul_assign","","",55,[[]]],[11,"default","","",61,[[],["ixdynimpl",3]]],[11,"default","","",54,[[],["arraybase",3]]],[11,"default","","",55,[[],["dim",3]]],[11,"next_back","extendr_api::prelude::iter","",77,[[],["option",4]]],[11,"nth_back","","",77,[[],["option",4]]],[11,"rfold","","",77,[[]]],[11,"next_back","","",64,[[],["option",4]]],[11,"next_back","","",70,[[],["option",4]]],[11,"next_back","","",69,[[],["option",4]]],[11,"next_back","","",67,[[],["option",4]]],[11,"next_back","","",68,[[],["option",4]]],[11,"next_back","","",78,[[],["option",4]]],[11,"nth_back","","",78,[[],["option",4]]],[11,"rfold","","",78,[[]]],[11,"into_owned","extendr_api::prelude","",19,[[["arraybase",3],["cowrepr",4]],[["ownedrepr",3],["arraybase",3]]]],[11,"into_owned","","",56,[[["arraybase",3],["ownedarcrepr",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"into_owned","","",58,[[["viewrepr",3],["arraybase",3]],[["ownedrepr",3],["arraybase",3]]]],[11,"into_owned","","",85,[[["ownedrepr",3],["arraybase",3]],[["ownedrepr",3],["arraybase",3]]]],[11,"into_owned","","",58,[[["viewrepr",3],["arraybase",3]],[["ownedrepr",3],["arraybase",3]]]],[11,"div","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"div","","",54,[[],["arraybase",3]]],[11,"div","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"cmp","","",16,[[["axis",3]],["ordering",4]]],[11,"neg","","Perform an elementwise negation of `self` and return the…",54,[[],["arraybase",3]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","extendr_api::prelude::iter","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","extendr_api::prelude","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","extendr_api::prelude::iter","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","extendr_api::prelude","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","extendr_api::prelude::iter","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","extendr_api::prelude","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"rem","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"rem","","",54,[[],["arraybase",3]]],[11,"rem","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"eq","","",25,[[["slice",3]]]],[11,"ne","","",25,[[["slice",3]]]],[11,"eq","","",54,[[["arraybase",3]]]],[11,"eq","","",55,[[["dim",3]]]],[11,"ne","","",55,[[["dim",3]]]],[11,"eq","","",62,[[["shapeerror",3]]]],[11,"eq","","",55,[[]]],[11,"eq","","",61,[[["ixdynimpl",3]]]],[11,"ne","","",61,[[["ixdynimpl",3]]]],[11,"eq","","",24,[[["errorkind",4]]]],[11,"eq","","",16,[[["axis",3]]]],[11,"ne","","",16,[[["axis",3]]]],[11,"eq","","",26,[[["sliceorindex",4]]]],[11,"ne","","",26,[[["sliceorindex",4]]]],[11,"into_shape","","",59,[[],["shape",3]]],[11,"f","","",59,[[],["shape",3]]],[11,"set_f","","",59,[[],["shape",3]]],[11,"strides","","",59,[[],["strideshape",3]]],[11,"not","","Perform an elementwise unary not of `self` and return the…",54,[[],["arraybase",3]]],[11,"clone","","",54,[[],["arraybase",3]]],[11,"clone_from","","`Array` implements `.clone_from()` to reuse an array\'s…",54,[[["arraybase",3]]]],[11,"clone","","",26,[[],["sliceorindex",4]]],[11,"clone","","",21,[[],["axisdescription",3]]],[11,"clone","extendr_api::prelude::iter","",69,[[],["axisiter",3]]],[11,"clone","","",65,[[],["indices",3]]],[11,"clone","extendr_api::prelude","",63,[[],["sliceinfo",3]]],[11,"clone","extendr_api::prelude::iter","",66,[[],["indicesiter",3]]],[11,"clone","extendr_api::prelude","",62,[[],["shapeerror",3]]],[11,"clone","extendr_api::prelude::iter","",77,[[],["iter",3]]],[11,"clone","","",71,[[],["exactchunks",3]]],[11,"clone","","",64,[[],["axes",3]]],[11,"clone","extendr_api::prelude","",55,[[],["dim",3]]],[11,"clone","extendr_api::prelude::iter","",72,[[],["exactchunksiter",3]]],[11,"clone","extendr_api::prelude","",61,[[],["ixdynimpl",3]]],[11,"clone","extendr_api::prelude::iter","",75,[[],["indexediter",3]]],[11,"clone","extendr_api::prelude","",85,[[],["ownedrepr",3]]],[11,"clone_from","","",85,[[["ownedrepr",3]]]],[11,"clone","","",59,[[],["shape",3]]],[11,"clone","extendr_api::prelude::iter","",83,[[],["windows",3]]],[11,"clone","extendr_api::prelude","",25,[[],["slice",3]]],[11,"clone","","",32,[[],["foldwhile",4]]],[11,"clone","","",84,[[],["zip",3]]],[11,"clone","","",57,[[],["rawviewrepr",3]]],[11,"clone","extendr_api::prelude::iter","",67,[[],["axischunksiter",3]]],[11,"clone","","",79,[[],["lanes",3]]],[11,"clone","extendr_api::prelude","",16,[[],["axis",3]]],[11,"clone","","",58,[[],["viewrepr",3]]],[11,"clone","","",60,[[],["strideshape",3]]],[11,"clone","","",24,[[],["errorkind",4]]],[11,"clone","extendr_api::prelude::iter","",80,[[],["lanesiter",3]]],[11,"clone","extendr_api::prelude","",56,[[],["ownedarcrepr",3]]],[11,"hash","","",16,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",26,[[]]],[11,"shl","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"shl","","",54,[[],["arraybase",3]]],[11,"shl","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"drop","","",85,[[]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitand_assign","","",54,[[]]],[11,"bitand_assign","","",54,[[["arraybase",3]]]],[11,"remove_axis","","",55,[[["axis",3]]]],[11,"remove_axis","","",55,[[["axis",3]],["dim",3]]],[11,"remove_axis","","",55,[[["axis",3]]]],[11,"remove_axis","","",55,[[["axis",3]]]],[11,"remove_axis","","",55,[[["axis",3]]]],[11,"remove_axis","","",55,[[["axis",3]],["dim",3]]],[11,"remove_axis","","",55,[[["axis",3]],[["ixdynimpl",3],["dim",3]]]],[11,"new","","",56,[[["vec",3]],["ownedarcrepr",3]]],[11,"into_shared","","",56,[[],["ownedarcrepr",3]]],[11,"new","","",85,[[["vec",3]],["ownedrepr",3]]],[11,"into_shared","","",85,[[],["ownedarcrepr",3]]],[11,"from_iter","","Create a one-dimensional array from an iterable.",54,[[],[["arraybase",3],["dim",3]]]],[11,"as_ref","","",63,[[]]],[11,"as_ref","","",63,[[],["sliceinfo",3]]],[11,"shr_assign","","",54,[[["arraybase",3]]]],[11,"shr_assign","","",54,[[]]],[11,"rem_assign","","",54,[[["arraybase",3]]]],[11,"rem_assign","","",54,[[]]],[11,"add","","",55,[[],["dim",3]]],[11,"add","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"add","","",55,[[["dim",3]],["dim",3]]],[11,"add","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"add","","",54,[[],["arraybase",3]]],[11,"into_iter","extendr_api::prelude::iter","",83,[[]]],[11,"into_iter","extendr_api::prelude","",54,[[]]],[11,"into_iter","extendr_api::prelude::iter","",79,[[]]],[11,"into_iter","","",74,[[]]],[11,"into_iter","","",71,[[]]],[11,"into_iter","","",82,[[]]],[11,"into_iter","extendr_api::prelude","",54,[[]]],[11,"into_iter","extendr_api::prelude::iter","",65,[[]]],[11,"deref_mut","extendr_api::prelude","",61,[[]]],[11,"len","extendr_api::prelude::iter","",77,[[]]],[11,"len","","",78,[[]]],[11,"len","","",80,[[]]],[11,"len","","",69,[[]]],[11,"len","","",76,[[]]],[11,"len","","",70,[[]]],[11,"len","","",81,[[]]],[11,"len","","",75,[[]]],[11,"_data_slice","extendr_api::prelude","",19,[[],["option",4]]],[11,"_data_slice","","",58,[[],["option",4]]],[11,"_data_slice","","",58,[[],["option",4]]],[11,"_data_slice","","",57,[[],["option",4]]],[11,"_data_slice","","",56,[[],["option",4]]],[11,"_data_slice","","",57,[[],["option",4]]],[11,"_data_slice","","",85,[[],["option",4]]],[11,"zero","","",55,[[],["dim",3]]],[11,"is_zero","","",55,[[]]],[11,"zero","","",55,[[],["dim",3]]],[11,"is_zero","","",55,[[]]],[11,"zero","","",55,[[],["dim",3]]],[11,"is_zero","","",55,[[]]],[11,"zero","","",55,[[],["dim",3]]],[11,"is_zero","","",55,[[]]],[11,"zero","","",55,[[],["dim",3]]],[11,"is_zero","","",55,[[]]],[11,"zero","","",55,[[],["dim",3]]],[11,"is_zero","","",55,[[]]],[11,"zero","","",55,[[],["dim",3]]],[11,"is_zero","","",55,[[]]],[11,"add_assign","","",54,[[]]],[11,"add_assign","","",55,[[["dim",3]]]],[11,"add_assign","","",54,[[["arraybase",3]]]],[11,"add_assign","","",55,[[["dim",3]]]],[11,"add_assign","","",55,[[]]],[11,"dot","","Perform the matrix multiplication of the row vector `self`…",54,[[["arraybase",3]],[["dim",3],["ownedrepr",3],["arraybase",3]]]],[11,"dot","","",54,[[["arraybase",3]],[["dim",3],["ownedrepr",3],["arraybase",3]]]],[11,"dot","","Compute the dot product of one-dimensional arrays.",54,[[["arraybase",3]]]],[11,"dot","","",54,[[["arraybase",3]],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[11,"contiguous_stride","","",54,[[]]],[11,"contiguous_stride","","",54,[[]]],[11,"contiguous_stride","extendr_api::prelude::iter","",69,[[]]],[11,"contiguous_stride","extendr_api::prelude","",54,[[]]],[11,"contiguous_stride","extendr_api::prelude::iter","",70,[[]]],[11,"contiguous_stride","","",65,[[]]],[11,"contiguous_stride","extendr_api::prelude","",54,[[]]],[11,"index_checked","","",55,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",55,[[["dim",3]]]],[11,"index_checked","","",55,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",55,[[["dim",3]]]],[11,"index_checked","","",55,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",55,[[["dim",3]]]],[11,"index_checked","","",55,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",55,[[["dim",3]]]],[11,"index_checked","","",55,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",55,[[["dim",3]]]],[11,"index_checked","","",55,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",55,[[["dim",3]]]],[11,"index_checked","","",55,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",55,[[["dim",3]]]],[11,"ndim","","",55,[[]]],[11,"into_pattern","","",55,[[]]],[11,"slice","","",55,[[]]],[11,"slice_mut","","",55,[[]]],[11,"zeros","","",55,[[],["dim",3]]],[11,"insert_axis","","",55,[[["axis",3]]]],[11,"try_remove_axis","","",55,[[["axis",3]]]],[11,"ndim","","",55,[[]]],[11,"slice","","",55,[[]]],[11,"slice_mut","","",55,[[]]],[11,"into_pattern","","",55,[[]]],[11,"zeros","","",55,[[],["dim",3]]],[11,"next_for","","",55,[[["dim",3]],[["option",4],["dim",3]]]],[11,"equal","","",55,[[["dim",3]]]],[11,"size","","",55,[[]]],[11,"size_checked","","",55,[[],["option",4]]],[11,"default_strides","","",55,[[],["dim",3]]],[11,"_fastest_varying_stride_order","","",55,[[],["dim",3]]],[11,"min_stride_axis","","",55,[[["dim",3]],["axis",3]]],[11,"max_stride_axis","","",55,[[["dim",3]],["axis",3]]],[11,"first_index","","",55,[[],[["option",4],["dim",3]]]],[11,"stride_offset","","Self is an index, return the stride offset",55,[[["dim",3]]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",55,[[["dim",3]],["option",4]]],[11,"insert_axis","","",55,[[["axis",3]]]],[11,"try_remove_axis","","",55,[[["axis",3]]]],[11,"ndim","","",55,[[]]],[11,"into_pattern","","",55,[[]]],[11,"slice","","",55,[[]]],[11,"slice_mut","","",55,[[]]],[11,"zeros","","",55,[[],["dim",3]]],[11,"insert_axis","","",55,[[["axis",3]]]],[11,"try_remove_axis","","",55,[[["axis",3]]]],[11,"ndim","","",55,[[]]],[11,"into_pattern","","",55,[[]]],[11,"slice","","",55,[[]]],[11,"slice_mut","","",55,[[]]],[11,"size","","",55,[[]]],[11,"zeros","","",55,[[],["dim",3]]],[11,"next_for","","",55,[[["dim",3]],[["dim",3],["option",4]]]],[11,"stride_offset","","Self is an index, return the stride offset",55,[[["dim",3]]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",55,[[["dim",3]],["option",4]]],[11,"_fastest_varying_stride_order","","",55,[[],["dim",3]]],[11,"insert_axis","","",55,[[["axis",3]]]],[11,"try_remove_axis","","",55,[[["axis",3]]]],[11,"ndim","","",55,[[]]],[11,"into_pattern","","",55,[[]]],[11,"slice","","",55,[[]]],[11,"slice_mut","","",55,[[]]],[11,"zeros","","",55,[[],["dim",3]]],[11,"next_for","","",55,[[["dim",3]],[["dim",3],["option",4]]]],[11,"equal","","",55,[[["dim",3]]]],[11,"size","","",55,[[]]],[11,"size_checked","","",55,[[],["option",4]]],[11,"last_elem","","",55,[[]]],[11,"set_last_elem","","",55,[[]]],[11,"default_strides","","",55,[[],["dim",3]]],[11,"fortran_strides","","",55,[[],["dim",3]]],[11,"_fastest_varying_stride_order","","",55,[[],["dim",3]]],[11,"min_stride_axis","","",55,[[["dim",3]],["axis",3]]],[11,"first_index","","",55,[[],[["dim",3],["option",4]]]],[11,"stride_offset","","Self is an index, return the stride offset",55,[[["dim",3]]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",55,[[["dim",3]],["option",4]]],[11,"insert_axis","","",55,[[["axis",3]]]],[11,"try_remove_axis","","",55,[[["axis",3]]]],[11,"ndim","","",55,[[]]],[11,"slice","","",55,[[]]],[11,"slice_mut","","",55,[[]]],[11,"_fastest_varying_stride_order","","",55,[[],["dim",3]]],[11,"into_pattern","","",55,[[]]],[11,"zeros","","",55,[[],["dim",3]]],[11,"next_for","","",55,[[["dim",3]],[["option",4],["dim",3]]]],[11,"insert_axis","","",55,[[["axis",3]]]],[11,"try_remove_axis","","",55,[[["axis",3]]]],[11,"ndim","","",55,[[]]],[11,"slice","","",55,[[]]],[11,"slice_mut","","",55,[[]]],[11,"into_pattern","","",55,[[]]],[11,"zeros","","",55,[[],[["ixdynimpl",3],["dim",3]]]],[11,"insert_axis","","",55,[[["axis",3]]]],[11,"try_remove_axis","","",55,[[["axis",3]]]],[11,"from_dimension","","",55,[[],[["option",4],["dim",3]]]],[11,"ndim","","",55,[[]]],[11,"into_pattern","","",55,[[]]],[11,"slice","","",55,[[]]],[11,"slice_mut","","",55,[[]]],[11,"zeros","","",55,[[],["dim",3]]],[11,"insert_axis","","",55,[[["axis",3]]]],[11,"try_remove_axis","","",55,[[["axis",3]]]],[11,"bitand","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"bitand","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"bitand","","",54,[[],["arraybase",3]]],[11,"mul","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"mul","","",55,[[["dim",3]],["dim",3]]],[11,"mul","","",54,[[],["arraybase",3]]],[11,"mul","","",55,[[],["dim",3]]],[11,"mul","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"deref","","",63,[[]]],[11,"deref","","",61,[[]]],[11,"clone_with_ptr","","",56,[[["nonnull",3]]]],[11,"clone_with_ptr","","",57,[[["nonnull",3]]]],[11,"clone_with_ptr","","",19,[[["nonnull",3]]]],[11,"clone_with_ptr","","",57,[[["nonnull",3]]]],[11,"clone_with_ptr","","",58,[[["nonnull",3]]]],[11,"clone_with_ptr","","",85,[[["nonnull",3]]]],[11,"clone_from_with_ptr","","",85,[[["ownedrepr",3],["nonnull",3]],["nonnull",3]]],[11,"bitxor_assign","","",54,[[]]],[11,"bitxor_assign","","",54,[[["arraybase",3]]]],[11,"shr","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"shr","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"shr","","",54,[[],["arraybase",3]]],[11,"index","","",55,[[]]],[11,"index","","",55,[[]]],[11,"index","","",55,[[]]],[11,"index","","",55,[[]]],[11,"index","","",55,[[]]],[11,"index","","",61,[[]]],[11,"index","","",54,[[]]],[11,"index","","",55,[[]]],[11,"index","","",55,[[]]],[11,"index","","",55,[[]]],[11,"bitor_assign","","",54,[[]]],[11,"bitor_assign","","",54,[[["arraybase",3]]]],[11,"into_dimension","","",61,[[]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub_assign","","",55,[[["dim",3]]]],[11,"sub_assign","","",54,[[]]],[11,"sub_assign","","",55,[[["dim",3]]]],[11,"sub_assign","","",55,[[]]],[11,"sub_assign","","",54,[[["arraybase",3]]]],[11,"bitor","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"bitor","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"bitor","","",54,[[],["arraybase",3]]],[11,"next","extendr_api::prelude::iter","",64,[[],["option",4]]],[11,"fold","","",64,[[]]],[11,"size_hint","","",64,[[]]],[11,"next","","",67,[[],["option",4]]],[11,"size_hint","","",67,[[]]],[11,"next","","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"next","","",66,[[],["option",4]]],[11,"size_hint","","",66,[[]]],[11,"fold","","",66,[[]]],[11,"next","","",81,[[],["option",4]]],[11,"size_hint","","",81,[[]]],[11,"next","","",70,[[],["option",4]]],[11,"size_hint","","",70,[[]]],[11,"next","","",69,[[],["option",4]]],[11,"size_hint","","",69,[[]]],[11,"next","","",77,[[],["option",4]]],[11,"size_hint","","",77,[[]]],[11,"fold","","",77,[[]]],[11,"nth","","",77,[[],["option",4]]],[11,"collect","","",77,[[]]],[11,"all","","",77,[[]]],[11,"any","","",77,[[]]],[11,"find","","",77,[[],["option",4]]],[11,"find_map","","",77,[[],["option",4]]],[11,"count","","",77,[[]]],[11,"last","","",77,[[],["option",4]]],[11,"position","","",77,[[],["option",4]]],[11,"next","","",76,[[],["option",4]]],[11,"size_hint","","",76,[[]]],[11,"next","","",75,[[],["option",4]]],[11,"size_hint","","",75,[[]]],[11,"next","","",72,[[],["option",4]]],[11,"size_hint","","",72,[[]]],[11,"next","","",78,[[],["option",4]]],[11,"size_hint","","",78,[[]]],[11,"fold","","",78,[[]]],[11,"nth","","",78,[[],["option",4]]],[11,"collect","","",78,[[]]],[11,"all","","",78,[[]]],[11,"any","","",78,[[]]],[11,"find","","",78,[[],["option",4]]],[11,"find_map","","",78,[[],["option",4]]],[11,"count","","",78,[[]]],[11,"last","","",78,[[],["option",4]]],[11,"position","","",78,[[],["option",4]]],[11,"next","","",80,[[],["option",4]]],[11,"size_hint","","",80,[[]]],[11,"next","","",68,[[],["option",4]]],[11,"size_hint","","",68,[[]]],[11,"bitxor","extendr_api::prelude","",54,[[["arraybase",3]],["arraybase",3]]],[11,"bitxor","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"bitxor","","",54,[[],["arraybase",3]]],[11,"sub","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"sub","","",54,[[["arraybase",3]],["arraybase",3]]],[11,"sub","","",55,[[["dim",3]],["dim",3]]],[11,"sub","","",55,[[],["dim",3]]],[11,"sub","","",54,[[],["arraybase",3]]],[11,"from","","",26,[[],["sliceorindex",4]]],[11,"from","","",25,[[["range",3]],["slice",3]]],[11,"from","","Create a one-dimensional array from a vector (no copying…",54,[[["vec",3]],[["arraybase",3],["dim",3]]]],[11,"from","","",25,[[["rangeto",3]],["slice",3]]],[11,"from","","",26,[[["range",3]],["sliceorindex",4]]],[11,"from","","",25,[[["range",3]],["slice",3]]],[11,"from","","",26,[[["rangeinclusive",3]],["sliceorindex",4]]],[11,"from","","",25,[[["rangefrom",3]],["slice",3]]],[11,"from","","",26,[[["rangeinclusive",3]],["sliceorindex",4]]],[11,"from","","Converts the `Vec` of arrays to an owned 2-D array.",54,[[["vec",3]],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[11,"from","","",25,[[["range",3]],["slice",3]]],[11,"from","","",54,[[["ownedrepr",3],["arraybase",3]],[["arraybase",3],["cowrepr",4]]]],[11,"from","","",26,[[["rangeto",3]],["sliceorindex",4]]],[11,"from","","Create a one-dimensional read-write array view of the data…",54,[[],[["viewrepr",3],["arraybase",3],["dim",3]]]],[11,"from","","",61,[[["vec",3]],["ixdynimpl",3]]],[11,"from","","",26,[[["rangeinclusive",3]],["sliceorindex",4]]],[11,"from","","",25,[[["rangeto",3]],["slice",3]]],[11,"from","","Converts the `Vec` of arrays to an owned 3-D array.",54,[[["vec",3]],[["dim",3],["ownedrepr",3],["arraybase",3]]]],[11,"from","","",25,[[["rangefrom",3]],["slice",3]]],[11,"from","","",25,[[["rangetoinclusive",3]],["slice",3]]],[11,"from","","",26,[[["rangeto",3]],["sliceorindex",4]]],[11,"from","","",26,[[["rangefrom",3]],["sliceorindex",4]]],[11,"from","","",26,[[["rangefull",3]],["sliceorindex",4]]],[11,"from","","",25,[[["rangeto",3]],["slice",3]]],[11,"from","","Create a `Shape` from `dimension`, using the default…",59,[[],["shape",3]]],[11,"from","","Create a one-dimensional read-only array view of the data…",54,[[],[["viewrepr",3],["arraybase",3],["dim",3]]]],[11,"from","","",25,[[["rangetoinclusive",3]],["slice",3]]],[11,"from","","",26,[[["range",3]],["sliceorindex",4]]],[11,"from","","",61,[[],["ixdynimpl",3]]],[11,"from","","",25,[[["rangefrom",3]],["slice",3]]],[11,"from","","Create a read-write array view of the array.",54,[[["arraybase",3]],[["viewrepr",3],["arraybase",3]]]],[11,"from","","",26,[[["rangetoinclusive",3]],["sliceorindex",4]]],[11,"from","","",26,[[["rangetoinclusive",3]],["sliceorindex",4]]],[11,"from","","",26,[[["rangefrom",3]],["sliceorindex",4]]],[11,"from","","",26,[[["slice",3]],["sliceorindex",4]]],[11,"from","","",60,[[],["strideshape",3]]],[11,"from","","",25,[[["rangeinclusive",3]],["slice",3]]],[11,"from","","",26,[[],["sliceorindex",4]]],[11,"from","","",26,[[],["sliceorindex",4]]],[11,"from","","",26,[[["rangefrom",3]],["sliceorindex",4]]],[11,"from","","",54,[[["viewrepr",3],["arraybase",3]],[["arraybase",3],["cowrepr",4]]]],[11,"from","","",26,[[["rangetoinclusive",3]],["sliceorindex",4]]],[11,"from","","Create a read-only array view of the array.",54,[[["arraybase",3]],[["viewrepr",3],["arraybase",3]]]],[11,"from","","",25,[[["rangetoinclusive",3]],["slice",3]]],[11,"from","","",26,[[["rangeto",3]],["sliceorindex",4]]],[11,"from","","",26,[[["range",3]],["sliceorindex",4]]],[11,"from","","",25,[[["rangeinclusive",3]],["slice",3]]],[11,"from","","",25,[[["rangefull",3]],["slice",3]]],[11,"from","","",25,[[["rangeinclusive",3]],["slice",3]]],[11,"index","","Convert a mutable array view to a mutable reference of a…",54,[[]]],[11,"get","","Convert a mutable array view to a mutable reference of a…",54,[[],["option",4]]],[11,"uget","","Convert a mutable array view to a mutable reference of a…",54,[[]]],[11,"partial_cmp","","",16,[[["axis",3]],[["ordering",4],["option",4]]]],[11,"lt","","",16,[[["axis",3]]]],[11,"le","","",16,[[["axis",3]]]],[11,"gt","","",16,[[["axis",3]]]],[11,"ge","","",16,[[["axis",3]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_ensure_unique","","",19,[[["arraybase",3]]]],[11,"try_is_unique","","",19,[[],["option",4]]],[11,"try_ensure_unique","","",57,[[["arraybase",3]]]],[11,"try_is_unique","","",57,[[],["option",4]]],[11,"try_ensure_unique","","",56,[[["arraybase",3]]]],[11,"try_is_unique","","",56,[[],["option",4]]],[11,"try_ensure_unique","","",85,[[["arraybase",3]]]],[11,"try_is_unique","","",85,[[],["option",4]]],[11,"try_ensure_unique","","",58,[[["arraybase",3]]]],[11,"try_is_unique","","",58,[[],["option",4]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"shl_assign","","",54,[[]]],[11,"shl_assign","","",54,[[["arraybase",3]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index_mut","","",55,[[]]],[11,"index_mut","","",55,[[]]],[11,"index_mut","","",55,[[]]],[11,"index_mut","","",55,[[]]],[11,"index_mut","","",54,[[]]],[11,"index_mut","","",55,[[]]],[11,"index_mut","","",55,[[]]],[11,"index_mut","","",61,[[]]],[11,"index_mut","","",55,[[]]],[11,"index_mut","","",55,[[]]],[11,"from_robj","extendr_api::iter","",6,[[["robj",4]],["result",4]]],[11,"from_robj","","",3,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api","",86,[[["robj",4]],["result",4]]],[11,"from_robj","","",87,[[["robj",4]],["result",4]]],[11,"from_robj","","",88,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api::robj","",37,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api::matrix","",8,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api","",11,[[["robj",4]],["result",4]]],[11,"from_robj","","Convert an R object to a `ndarray` ArrayView1.",89,[[["robj",4]],["result",4]]],[11,"from_robj","","Convert an R object to a `ndarray` ArrayView2.",90,[[["robj",4]],["result",4]]],[11,"from_robj","","Convert an R object to a `ndarray` ArrayView2.",90,[[["robj",4]],["result",4]]],[11,"from_robj","","Convert an R object to a `ndarray` ArrayView2.",90,[[["robj",4]],["result",4]]],[11,"sexptype","extendr_api::logical","",7,[[],["sexptype",6]]],[11,"to_logical","","",7,[[]]],[11,"as_typed_slice","extendr_api::robj","",37,[[],["option",4]]],[11,"as_typed_slice_mut","","",37,[[],["option",4]]],[11,"as_typed_slice","","",37,[[],["option",4]]],[11,"as_typed_slice_mut","","",37,[[],["option",4]]],[11,"as_typed_slice","","",37,[[],["option",4]]],[11,"as_typed_slice_mut","","",37,[[],["option",4]]],[11,"as_typed_slice","","",37,[[],["option",4]]],[11,"as_typed_slice_mut","","",37,[[],["option",4]]],[11,"is_na","extendr_api::logical","",7,[[]]],[11,"drop","extendr_api::robj","",37,[[]]],[11,"from","extendr_api::error","",0,[[["box",3],["error",8]],["error",4]]],[11,"from","","",0,[[],["error",4]]],[11,"from","","",0,[[["string",3]],["error",4]]],[11,"from","extendr_api::logical","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","extendr_api::robj","",37,[[["rcolumn",6]]]],[11,"from","","",37,[[["rarray",3]]]],[11,"from","","",37,[[["rarray",3]]]],[11,"from","","",37,[[["arg",3]]]],[11,"from","","",37,[[["func",3]]]],[11,"from","","",37,[[["impl",3]]]],[11,"from","","",37,[[["metadata",3]]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[["result",6]]]],[11,"from","","",37,[[["character",3]]]],[11,"from","","",37,[[["robj",4]]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[["vec",3]]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[["range",3]]]],[11,"from","","",37,[[["rangeinclusive",3]]]],[11,"from","","Convert a real iterator into a vector.",37,[[["realiter",6]]]],[11,"from","","Convert an integer iterator into a vector.",37,[[["integeriter",6]]]],[11,"from","","Convert a logical iterator into a vector.",37,[[["logicaliter",6]]]],[11,"from","","Convert a hashmap into a list.",37,[[["hashmap",3],["robj",4]]]],[11,"from","","Make a list object from an array of Robjs.",37,[[["list",3]]]],[11,"from","","Make an expression object from an array of Robjs.",37,[[["expr",3]]]],[11,"from","","Make a raw object from bytes.",37,[[["raw",3]]]],[11,"from","","Make a primitive object, or NULL if not available.",37,[[["primitive",3]]]],[11,"from","","Convert a wrapper to an R language object.",37,[[["lang",3]]]],[11,"from","","Convert a wrapper to an R environment object.",37,[[["env",3]]]],[11,"from","","Convert a wrapper to a LISTSXP object.",37,[[["pairlist",3]]]],[11,"size_hint","extendr_api::iter","",3,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"nth","","",3,[[],["option",4]]],[11,"next","","",4,[[],["option",4]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"nth","","",6,[[],["option",4]]],[11,"next","","",53,[[],["option",4]]],[11,"clone","","",3,[[],["listiter",3]]],[11,"clone","","",4,[[],["pairlistiter",3]]],[11,"clone","","",5,[[],["pairlisttagiter",3]]],[11,"clone","","",6,[[],["striter",3]]],[11,"clone","","",53,[[],["enviter",3]]],[11,"clone","extendr_api::logical","",7,[[]]],[11,"clone","extendr_api::robj","",37,[[]]],[11,"clone","extendr_api::wrapper","",41,[[],["character",3]]],[11,"clone","","",42,[[],["raw",3]]],[11,"clone","","",43,[[],["lang",3]]],[11,"clone","","",44,[[],["pairlist",3]]],[11,"clone","","",45,[[],["list",3]]],[11,"clone","","",46,[[],["expr",3]]],[11,"clone","","",47,[[],["env",3]]],[11,"clone","","",48,[[],["func",3]]],[11,"clone","","",49,[[],["promise",3]]],[11,"clone","","",50,[[],["primitive",3]]],[11,"default","extendr_api::robj","",37,[[]]],[11,"eq","extendr_api::error","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","extendr_api::logical","",7,[[["bool",3]]]],[11,"ne","","",7,[[["bool",3]]]],[11,"eq","extendr_api::matrix","",8,[[["rarray",3]]]],[11,"ne","","",8,[[["rarray",3]]]],[11,"eq","extendr_api::metadata","",12,[[["arg",3]]]],[11,"ne","","",12,[[["arg",3]]]],[11,"eq","","",13,[[["func",3]]]],[11,"ne","","",13,[[["func",3]]]],[11,"eq","","",14,[[["impl",3]]]],[11,"ne","","",14,[[["impl",3]]]],[11,"eq","","",15,[[["metadata",3]]]],[11,"ne","","",15,[[["metadata",3]]]],[11,"eq","extendr_api::robj","",37,[[]]],[11,"eq","","",37,[[]]],[11,"eq","","",37,[[]]],[11,"eq","","",37,[[["robj",4]]]],[11,"eq","extendr_api::wrapper","",41,[[["character",3]]]],[11,"ne","","",41,[[["character",3]]]],[11,"eq","","",42,[[["raw",3]]]],[11,"ne","","",42,[[["raw",3]]]],[11,"eq","","",43,[[["lang",3]]]],[11,"ne","","",43,[[["lang",3]]]],[11,"eq","","",44,[[["pairlist",3]]]],[11,"ne","","",44,[[["pairlist",3]]]],[11,"eq","","",45,[[["list",3]]]],[11,"ne","","",45,[[["list",3]]]],[11,"eq","","",46,[[["expr",3]]]],[11,"ne","","",46,[[["expr",3]]]],[11,"eq","","",47,[[["env",3]]]],[11,"ne","","",47,[[["env",3]]]],[11,"eq","","",48,[[["func",3]]]],[11,"ne","","",48,[[["func",3]]]],[11,"eq","","",49,[[["promise",3]]]],[11,"ne","","",49,[[["promise",3]]]],[11,"eq","","",50,[[["primitive",3]]]],[11,"ne","","",50,[[["primitive",3]]]],[11,"fmt","extendr_api::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::iter","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::logical","",7,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::matrix","",8,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::metadata","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::robj","",37,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::wrapper","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::error","",0,[[["formatter",3]],["result",6]]],[11,"div","extendr_api::robj","Divide two R objects, consuming the left hand side. panics…",37,[[]]],[11,"sub","","Subtract two R objects, consuming the left hand side.…",37,[[]]],[11,"add","","Add two R objects, consuming the left hand side. panics on…",37,[[]]],[11,"mul","","Multiply two R objects, consuming the left hand side.…",37,[[]]],[11,"index","extendr_api::matrix","Zero-based indexing in row, column order.",8,[[]]],[11,"index_mut","","Zero-based mutable indexing in row, column order.",8,[[]]],[11,"source","extendr_api::error","",0,[[],[["option",4],["error",8]]]],[11,"as_pairlist_iter","extendr_api::robj","Get an iterator over a pairlist objects.",37,[[],[["pairlistiter",3],["option",4]]]],[11,"as_pairlist_tag_iter","","Get an iterator over pairlist tags.",37,[[],[["option",4],["pairlisttagiter",3]]]],[11,"as_list_iter","","Get an iterator over a list (VECSXP).",37,[[],[["option",4],["listiter",3]]]],[11,"as_str_iter","","Get an iterator over a string vector. Returns None if the…",37,[[],[["option",4],["striter",3]]]],[11,"as_env_iter","","Iterate over an environment.",37,[[],[["enviter",3],["option",4]]]],[11,"as_vector","","",37,[[],[["option",4],["rcolumn",6]]]],[11,"as_matrix","","",37,[[],[["option",4],["rmatrix",6]]]],[11,"as_matrix3d","","",37,[[],[["option",4],["rmatrix3d",6]]]],[11,"from_vec","extendr_api::prelude","Create a one-dimensional array from a vector (no copying…",54,[[["vec",3]],[["arraybase",3],["dim",3]]]],[11,"linspace","","Create a one-dimensional array with `n` evenly spaced…",54,[[],[["arraybase",3],["dim",3]]]],[11,"range","","Create a one-dimensional array with elements from `start`…",54,[[],[["arraybase",3],["dim",3]]]],[11,"logspace","","Create a one-dimensional array with `n` logarithmically…",54,[[],[["arraybase",3],["dim",3]]]],[11,"geomspace","","Create a one-dimensional array with `n` geometrically…",54,[[],[["option",4],["arraybase",3]]]],[11,"eye","","Create an identity matrix of size `n` (square 2D array).",54,[[],[["dim",3],["arraybase",3]]]],[11,"from_diag","","Create a 2D matrix from its diagonal",54,[[["arraybase",3]],[["dim",3],["arraybase",3]]]],[11,"from_elem","","Create an array with copies of `elem`, shape `shape`.",54,[[],["arraybase",3]]],[11,"zeros","","Create an array with zeros, shape `shape`.",54,[[],["arraybase",3]]],[11,"ones","","Create an array with ones, shape `shape`.",54,[[],["arraybase",3]]],[11,"default","","Create an array with default values, shape `shape`",54,[[],["arraybase",3]]],[11,"from_shape_simple_fn","","Create an array with values created by the function `f`.",54,[[],["arraybase",3]]],[11,"from_shape_fn","","Create an array with values created by the function `f`.",54,[[],["arraybase",3]]],[11,"from_shape_vec","","Create an array with the given shape from a vector. (No…",54,[[["vec",3]],[["arraybase",3],["shapeerror",3],["result",4]]]],[11,"from_shape_vec_unchecked","","Creates an array from a vector and interpret it according…",54,[[["vec",3]],["arraybase",3]]],[11,"uninitialized","","Create an array with uninitalized elements, shape `shape`.",54,[[],["arraybase",3]]],[11,"maybe_uninit","","Create an array with uninitalized elements, shape `shape`.",54,[[],["arraybase",3]]],[11,"len","","Return the total number of elements in the array.",54,[[]]],[11,"len_of","","Return the length of `axis`.",54,[[["axis",3]]]],[11,"is_empty","","Return whether the array has any elements",54,[[]]],[11,"ndim","","Return the number of dimensions (axes) in the array",54,[[]]],[11,"dim","","Return the shape of the array in its “pattern” form, an…",54,[[]]],[11,"raw_dim","","Return the shape of the array as it stored in the array.",54,[[]]],[11,"shape","","Return the shape of the array as a slice.",54,[[]]],[11,"strides","","Return the strides of the array as a slice.",54,[[]]],[11,"stride_of","","Return the stride of `axis`.",54,[[["axis",3]]]],[11,"view","","Return a read-only view of the array",54,[[],[["viewrepr",3],["arraybase",3]]]],[11,"view_mut","","Return a read-write view of the array",54,[[],[["viewrepr",3],["arraybase",3]]]],[11,"to_owned","","Return an uniquely owned copy of the array.",54,[[],[["ownedrepr",3],["arraybase",3]]]],[11,"to_shared","","Return a shared ownership (copy on write) array.",54,[[],[["arraybase",3],["ownedarcrepr",3]]]],[11,"into_owned","","Turn the array into a uniquely owned array, cloning the…",54,[[],[["ownedrepr",3],["arraybase",3]]]],[11,"into_shared","","Turn the array into a shared ownership (copy on write)…",54,[[],[["arraybase",3],["ownedarcrepr",3]]]],[11,"first","","Returns a reference to the first element of the array, or…",54,[[],["option",4]]],[11,"first_mut","","Returns a mutable reference to the first element of the…",54,[[],["option",4]]],[11,"iter","","Return an iterator of references to the elements of the…",54,[[],["iter",3]]],[11,"iter_mut","","Return an iterator of mutable references to the elements…",54,[[],["itermut",3]]],[11,"indexed_iter","","Return an iterator of indexes and references to the…",54,[[],["indexediter",3]]],[11,"indexed_iter_mut","","Return an iterator of indexes and mutable references to…",54,[[],["indexeditermut",3]]],[11,"slice","","Return a sliced view of the array.",54,[[["sliceinfo",3]],[["viewrepr",3],["arraybase",3]]]],[11,"slice_mut","","Return a sliced read-write view of the array.",54,[[["sliceinfo",3]],[["viewrepr",3],["arraybase",3]]]],[11,"multi_slice_mut","","Return multiple disjoint, sliced, mutable views of the…",54,[[]]],[11,"slice_move","","Slice the array, possibly changing the number of dimensions.",54,[[["sliceinfo",3]],["arraybase",3]]],[11,"slice_collapse","","Slice the array in place without changing the number of…",54,[[]]],[11,"slice_inplace","","Slice the array in place without changing the number of…",54,[[]]],[11,"slice_axis","","Return a view of the array, sliced along the specified axis.",54,[[["axis",3],["slice",3]],[["viewrepr",3],["arraybase",3]]]],[11,"slice_axis_mut","","Return a mutable view of the array, sliced along the…",54,[[["axis",3],["slice",3]],[["viewrepr",3],["arraybase",3]]]],[11,"slice_axis_inplace","","Slice the array in place along the specified axis.",54,[[["axis",3],["slice",3]]]],[11,"get","","Return a reference to the element at `index`, or return…",54,[[],["option",4]]],[11,"get_mut","","Return a mutable reference to the element at `index`, or…",54,[[],["option",4]]],[11,"uget","","Perform unchecked array indexing.",54,[[]]],[11,"uget_mut","","Perform unchecked array indexing.",54,[[]]],[11,"swap","","Swap elements at indices `index1` and `index2`.",54,[[]]],[11,"uswap","","Swap elements unchecked at indices `index1` and `index2`.",54,[[]]],[11,"index_axis","","Returns a view restricted to `index` along the axis, with…",54,[[["axis",3]],[["arraybase",3],["viewrepr",3]]]],[11,"index_axis_mut","","Returns a mutable view restricted to `index` along the…",54,[[["axis",3]],[["viewrepr",3],["arraybase",3]]]],[11,"index_axis_move","","Collapses the array to `index` along the axis and removes…",54,[[["axis",3]],["arraybase",3]]],[11,"collapse_axis","","Selects `index` along the axis, collapsing the axis into…",54,[[["axis",3]]]],[11,"subview","","Along `axis`, select the subview `index` and return a view…",54,[[["axis",3]],[["arraybase",3],["viewrepr",3]]]],[11,"subview_mut","","Along `axis`, select the subview `index` and return a…",54,[[["axis",3]],[["viewrepr",3],["arraybase",3]]]],[11,"subview_inplace","","Collapse dimension `axis` into length one, and select the…",54,[[["axis",3]]]],[11,"into_subview","","Along `axis`, select the subview `index` and return `self`…",54,[[["axis",3]],["arraybase",3]]],[11,"select","","Along `axis`, select arbitrary subviews corresponding to…",54,[[["axis",3]],[["ownedrepr",3],["arraybase",3]]]],[11,"genrows","","Return a producer and iterable that traverses over the…",54,[[],["lanes",3]]],[11,"genrows_mut","","Return a producer and iterable that traverses over the…",54,[[],["lanesmut",3]]],[11,"gencolumns","","Return a producer and iterable that traverses over the…",54,[[],["lanes",3]]],[11,"gencolumns_mut","","Return a producer and iterable that traverses over the…",54,[[],["lanesmut",3]]],[11,"lanes","","Return a producer and iterable that traverses over all 1D…",54,[[["axis",3]],["lanes",3]]],[11,"lanes_mut","","Return a producer and iterable that traverses over all 1D…",54,[[["axis",3]],["lanesmut",3]]],[11,"outer_iter","","Return an iterator that traverses over the outermost…",54,[[],["axisiter",3]]],[11,"outer_iter_mut","","Return an iterator that traverses over the outermost…",54,[[],["axisitermut",3]]],[11,"axis_iter","","Return an iterator that traverses over `axis` and yields…",54,[[["axis",3]],["axisiter",3]]],[11,"axis_iter_mut","","Return an iterator that traverses over `axis` and yields…",54,[[["axis",3]],["axisitermut",3]]],[11,"axis_chunks_iter","","Return an iterator that traverses over `axis` by chunks of…",54,[[["axis",3]],["axischunksiter",3]]],[11,"axis_chunks_iter_mut","","Return an iterator that traverses over `axis` by chunks of…",54,[[["axis",3]],["axischunksitermut",3]]],[11,"exact_chunks","","Return an exact chunks producer (and iterable).",54,[[],["exactchunks",3]]],[11,"exact_chunks_mut","","Return an exact chunks producer (and iterable).",54,[[],["exactchunksmut",3]]],[11,"windows","","Return a window producer and iterable.",54,[[],["windows",3]]],[11,"diag","","Return an view of the diagonal elements of the array.",54,[[],[["arraybase",3],["viewrepr",3],["dim",3]]]],[11,"diag_mut","","Return a read-write view over the diagonal elements of the…",54,[[],[["viewrepr",3],["dim",3],["arraybase",3]]]],[11,"into_diag","","Return the diagonal as a one-dimensional array.",54,[[],[["arraybase",3],["dim",3]]]],[11,"is_standard_layout","","Return `true` if the array data is laid out in contiguous…",54,[[]]],[11,"as_standard_layout","","Return a standard-layout array containing the data,…",54,[[],[["arraybase",3],["cowrepr",4]]]],[11,"as_ptr","","Return a pointer to the first element in the array.",54,[[]]],[11,"as_mut_ptr","","Return a mutable pointer to the first element in the array.",54,[[]]],[11,"raw_view","","Return a raw view of the array.",54,[[],[["rawviewrepr",3],["arraybase",3]]]],[11,"raw_view_mut","","Return a raw mutable view of the array.",54,[[],[["arraybase",3],["rawviewrepr",3]]]],[11,"as_slice","","Return the array’s data as a slice, if it is contiguous…",54,[[],["option",4]]],[11,"as_slice_mut","","Return the array’s data as a slice, if it is contiguous…",54,[[],["option",4]]],[11,"as_slice_memory_order","","Return the array’s data as a slice if it is contiguous,…",54,[[],["option",4]]],[11,"as_slice_memory_order_mut","","Return the array’s data as a slice if it is contiguous,…",54,[[],["option",4]]],[11,"into_shape","","Transform the array into `shape`; any shape with the same…",54,[[],[["arraybase",3],["result",4],["shapeerror",3]]]],[11,"reshape","","Note: Reshape is for `ArcArray` only. Use `.into_shape()`…",54,[[],["arraybase",3]]],[11,"into_dyn","","Convert any array or array view to a dynamic dimensional…",54,[[],[["arraybase",3],["dim",3]]]],[11,"into_dimensionality","","Convert an array or array view to another with the same…",54,[[],[["result",4],["arraybase",3],["shapeerror",3]]]],[11,"broadcast","","Act like a larger size and/or shape array by broadcasting…",54,[[],[["option",4],["arraybase",3]]]],[11,"swap_axes","","Swap axes `ax` and `bx`.",54,[[]]],[11,"permuted_axes","","Permute the axes.",54,[[],["arraybase",3]]],[11,"reversed_axes","","Transpose the array by reversing axes.",54,[[],["arraybase",3]]],[11,"t","","Return a transposed view of the array.",54,[[],[["viewrepr",3],["arraybase",3]]]],[11,"axes","","Return an iterator over the length and stride of each axis.",54,[[],["axes",3]]],[11,"max_stride_axis","","Return the axis with the greatest stride (by absolute…",54,[[],["axis",3]]],[11,"invert_axis","","Reverse the stride of `axis`.",54,[[["axis",3]]]],[11,"merge_axes","","If possible, merge in the axis `take` to `into`.",54,[[["axis",3]]]],[11,"insert_axis","","Insert new array axis at `axis` and return the result.",54,[[["axis",3]],["arraybase",3]]],[11,"remove_axis","","Remove array axis `axis` and return the result.",54,[[["axis",3]],["arraybase",3]]],[11,"assign","","Perform an elementwise assigment to `self` from `rhs`.",54,[[["arraybase",3]]]],[11,"fill","","Perform an elementwise assigment to `self` from element `x`.",54,[[]]],[11,"zip_mut_with","","Traverse two arrays in unspecified order, in lock step,…",54,[[["arraybase",3]]]],[11,"fold","","Traverse the array elements and apply a fold, returning…",54,[[]]],[11,"map","","Call `f` by reference on each element and create a new…",54,[[],[["arraybase",3],["ownedrepr",3]]]],[11,"map_mut","","Call `f` on a mutable reference of each element and create…",54,[[],[["arraybase",3],["ownedrepr",3]]]],[11,"mapv","","Call `f` by value on each element and create a new array…",54,[[],[["arraybase",3],["ownedrepr",3]]]],[11,"mapv_into","","Call `f` by value on each element, update the array with…",54,[[],["arraybase",3]]],[11,"map_inplace","","Modify the array in place by calling `f` by mutable…",54,[[]]],[11,"mapv_inplace","","Modify the array in place by calling `f` by value on each…",54,[[]]],[11,"visit","","Visit each element in the array by calling `f` by…",54,[[]]],[11,"fold_axis","","Fold along an axis.",54,[[["axis",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"map_axis","","Reduce the values along an axis into just one value,…",54,[[["axis",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"map_axis_mut","","Reduce the values along an axis into just one value,…",54,[[["axis",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"accumulate_axis_inplace","","Iterates over pairs of consecutive elements along the axis.",54,[[["axis",3]]]],[11,"into_scalar","","Returns the single element in the array without cloning it.",54,[[]]],[11,"into_raw_vec","","Return a vector of the elements in the array, in the way…",54,[[],["vec",3]]],[11,"assume_init","","Promise that the array\'s elements are all fully…",54,[[],["arraybase",3]]],[11,"to_vec","","Return an vector with the elements of the one-dimensional…",54,[[],["vec",3]]],[11,"row","","Return an array view of row `index`.",54,[[],[["arraybase",3],["viewrepr",3],["dim",3]]]],[11,"row_mut","","Return a mutable array view of row `index`.",54,[[],[["viewrepr",3],["dim",3],["arraybase",3]]]],[11,"nrows","","Return the number of rows (length of `Axis(0)`) in the…",54,[[]]],[11,"rows","","Return the number of rows (length of `Axis(0)`) in the…",54,[[]]],[11,"column","","Return an array view of column `index`.",54,[[],[["arraybase",3],["viewrepr",3],["dim",3]]]],[11,"column_mut","","Return a mutable array view of column `index`.",54,[[],[["viewrepr",3],["dim",3],["arraybase",3]]]],[11,"ncols","","Return the number of columns (length of `Axis(1)`) in the…",54,[[]]],[11,"cols","","Return the number of columns (length of `Axis(1)`) in the…",54,[[]]],[11,"is_square","","Return true if the array is square, false otherwise.",54,[[]]],[11,"insert_axis_inplace","","Insert new array axis of length 1 at `axis`, modifying the…",54,[[["axis",3]]]],[11,"index_axis_inplace","","Collapses the array to `index` along the axis and removes…",54,[[["axis",3]]]],[11,"sum","","Return the sum of all elements in the array.",54,[[]]],[11,"mean","","Returns the arithmetic mean x̅ of all elements in the array:",54,[[],["option",4]]],[11,"scalar_sum","","Return the sum of all elements in the array.",54,[[]]],[11,"product","","Return the product of all elements in the array.",54,[[]]],[11,"sum_axis","","Return sum along `axis`.",54,[[["axis",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"mean_axis","","Return mean along `axis`.",54,[[["axis",3]],[["arraybase",3],["option",4]]]],[11,"var_axis","","Return variance along `axis`.",54,[[["axis",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"std_axis","","Return standard deviation along `axis`.",54,[[["axis",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"all_close","","Return `true` if the arrays\' elementwise differences are…",54,[[["arraybase",3]]]],[11,"dot","","Perform dot product or matrix multiplication of arrays…",54,[[]]],[11,"dot","","Perform matrix multiplication of rectangular arrays `self`…",54,[[]]],[11,"scaled_add","","Perform the operation `self += alpha * rhs` efficiently,…",54,[[["arraybase",3]]]],[11,"from_shape","","Create a read-only array view borrowing its data from a…",54,[[],[["result",4],["arraybase",3],["shapeerror",3]]]],[11,"from_shape_ptr","","Create an `ArrayView<A, D>` from shape information and a…",54,[[],[["viewrepr",3],["arraybase",3]]]],[11,"from_shape","","Create a read-write array view borrowing its data from a…",54,[[],[["shapeerror",3],["result",4],["arraybase",3]]]],[11,"from_shape_ptr","","Create an `ArrayViewMut<A, D>` from shape information and…",54,[[],[["viewrepr",3],["arraybase",3]]]],[11,"reborrow","","Convert the view into an `ArrayViewMut<\'b, A, D>` where…",54,[[],[["viewrepr",3],["arraybase",3]]]],[11,"reborrow","","Convert the view into an `ArrayView<\'b, A, D>` where `\'b`…",54,[[],[["viewrepr",3],["arraybase",3]]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",54,[[],["option",4]]],[11,"to_slice","","Return the array’s data as a slice, if it is contiguous…",54,[[],["option",4]]],[11,"into_scalar","","Consume the view and return a reference to the single…",54,[[]]],[11,"into_scalar","","Consume the mutable view and return a mutable reference to…",54,[[]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",54,[[],["option",4]]],[11,"split_at","","Split the array view along `axis` and return one view…",54,[[["axis",3]]]],[11,"split_at","","Split the array view along `axis` and return one mutable…",54,[[["axis",3]]]],[11,"multi_slice_move","","Split the view into multiple disjoint slices.",54,[[]]],[11,"from_shape_ptr","","Create an `RawArrayView<A, D>` from shape information and…",54,[[],[["rawviewrepr",3],["arraybase",3]]]],[11,"deref_into_view","","Converts to a read-only view of the array.",54,[[],[["viewrepr",3],["arraybase",3]]]],[11,"split_at","","Split the array view along `axis` and return one array…",54,[[["axis",3]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different…",54,[[],[["arraybase",3],["rawviewrepr",3]]]],[11,"from_shape_ptr","","Create an `RawArrayViewMut<A, D>` from shape information…",54,[[],[["arraybase",3],["rawviewrepr",3]]]],[11,"deref_into_view","","Converts to a read-only view of the array.",54,[[],[["viewrepr",3],["arraybase",3]]]],[11,"deref_into_view_mut","","Converts to a mutable view of the array.",54,[[],[["viewrepr",3],["arraybase",3]]]],[11,"split_at","","Split the array view along `axis` and return one array…",54,[[["axis",3]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different…",54,[[],[["rawviewrepr",3],["arraybase",3]]]],[11,"is_view","","Returns `true` iff the array is the view (borrowed) variant.",54,[[]]],[11,"is_owned","","Returns `true` iff the array is the owned variant.",54,[[]]],[11,"index","","Return the index of the axis.",16,[[]]],[11,"zeros","","Create a new dimension value with `n` axes, all zeros",55,[[],[["ixdynimpl",3],["dim",3]]]],[11,"is_view","","Returns `true` iff the data is the `View` variant.",19,[[]]],[11,"is_owned","","Returns `true` iff the data is the `Owned` variant.",19,[[]]],[11,"size","","Return the size of the shape in number of elements",59,[[]]],[11,"axis","","Return axis",21,[[],["axis",3]]],[11,"len","","Return length",21,[[]]],[11,"stride","","Return stride",21,[[]]],[11,"kind","","Return the `ErrorKind` of this error.",62,[[],["errorkind",4]]],[11,"from_kind","","Create a new `ShapeError`",62,[[["errorkind",4]],["shapeerror",3]]],[11,"new","","Create a new `Slice` with the given extents.",25,[[["option",4]],["slice",3]]],[11,"step_by","","Create a new `Slice` with the given step size (multiplied…",25,[[],["slice",3]]],[11,"new","","Returns a new `SliceInfo` instance.",63,[[],[["result",4],["shapeerror",3],["sliceinfo",3]]]],[11,"out_ndim","","Returns the number of dimensions after calling `.slice()`…",63,[[]]],[11,"is_slice","","Returns `true` if `self` is a `Slice` value.",26,[[]]],[11,"is_index","","Returns `true` if `self` is an `Index` value.",26,[[]]],[11,"step_by","","Returns a new `SliceOrIndex` with the given step size…",26,[[],["sliceorindex",4]]],[11,"split_at","extendr_api::prelude::iter","Splits the iterator at index, yielding two disjoint…",67,[[]]],[11,"split_at","","Splits the iterator at index, yielding two disjoint…",68,[[]]],[11,"split_at","","Splits the iterator at `index`, yielding two disjoint…",69,[[]]],[11,"split_at","","Splits the iterator at `index`, yielding two disjoint…",70,[[]]],[11,"into_inner","extendr_api::prelude","Return the inner value",32,[[]]],[11,"is_done","","Return true if it is `Done`, false if `Continue`",32,[[]]],[11,"from","","Create a new `Zip` from the input array or other producer…",84,[[],["zip",3]]],[11,"indexed","","Create a new `Zip` with an index producer and the producer…",84,[[],["zip",3]]],[11,"size","","Return a the number of element tuples in the Zip",84,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",84,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",84,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",84,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",84,[[]]],[11,"and","","Include the producer `p` in the Zip.",84,[[],["zip",3]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",84,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",84,[[],[["ownedrepr",3],["arraybase",3]]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",84,[[]]],[11,"split","","Split the `Zip` evenly in two.",84,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",84,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",84,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",84,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",84,[[]]],[11,"and","","Include the producer `p` in the Zip.",84,[[],["zip",3]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",84,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",84,[[],[["ownedrepr",3],["arraybase",3]]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",84,[[]]],[11,"split","","Split the `Zip` evenly in two.",84,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",84,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",84,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",84,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",84,[[]]],[11,"and","","Include the producer `p` in the Zip.",84,[[],["zip",3]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",84,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",84,[[],[["ownedrepr",3],["arraybase",3]]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",84,[[]]],[11,"split","","Split the `Zip` evenly in two.",84,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",84,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",84,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",84,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",84,[[]]],[11,"and","","Include the producer `p` in the Zip.",84,[[],["zip",3]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",84,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",84,[[],[["ownedrepr",3],["arraybase",3]]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",84,[[]]],[11,"split","","Split the `Zip` evenly in two.",84,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",84,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",84,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",84,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",84,[[]]],[11,"and","","Include the producer `p` in the Zip.",84,[[],["zip",3]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",84,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",84,[[],[["ownedrepr",3],["arraybase",3]]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",84,[[]]],[11,"split","","Split the `Zip` evenly in two.",84,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",84,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",84,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",84,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",84,[[]]],[11,"split","","Split the `Zip` evenly in two.",84,[[]]],[11,"from_robj","extendr_api::robj","",38,[[["robj",4]],["result",4]]],[11,"sexptype","","",39,[[],["sexptype",6]]],[11,"to_real","","",39,[[]]],[11,"to_integer","","",39,[[]]],[11,"to_logical","","",39,[[]]],[11,"to_raw","","",39,[[]]],[11,"to_sexp","","",39,[[],["sexp",6]]]],"p":[[4,"Error"],[13,"EvalError"],[13,"ParseError"],[3,"ListIter"],[3,"PairlistIter"],[3,"PairlistTagIter"],[3,"StrIter"],[3,"Bool"],[3,"RArray"],[6,"RColumn"],[6,"RMatrix"],[6,"RMatrix3D"],[3,"Arg"],[3,"Func"],[3,"Impl"],[3,"Metadata"],[3,"Axis"],[8,"Dimension"],[8,"ShapeBuilder"],[4,"CowRepr"],[8,"Dot"],[3,"AxisDescription"],[8,"IntoDimension"],[8,"RemoveAxis"],[4,"ErrorKind"],[3,"Slice"],[4,"SliceOrIndex"],[13,"Slice"],[8,"IndexLonger"],[8,"AssignElem"],[8,"RawData"],[8,"RawDataSubst"],[4,"FoldWhile"],[8,"IntoNdProducer"],[8,"NdProducer"],[8,"FixedInitializer"],[8,"RobjItertools"],[4,"Robj"],[8,"FromRobj"],[8,"ToVectorValue"],[8,"AsTypedSlice"],[3,"Character"],[3,"Raw"],[3,"Lang"],[3,"Pairlist"],[3,"List"],[3,"Expr"],[3,"Env"],[3,"Func"],[3,"Promise"],[3,"Primitive"],[8,"SymPair"],[8,"IsNA"],[3,"EnvIter"],[3,"ArrayBase"],[3,"Dim"],[3,"OwnedRcRepr"],[3,"RawViewRepr"],[3,"ViewRepr"],[3,"Shape"],[3,"StrideShape"],[3,"IxDynImpl"],[3,"ShapeError"],[3,"SliceInfo"],[3,"Axes"],[3,"Indices"],[3,"IndicesIter"],[3,"AxisChunksIter"],[3,"AxisChunksIterMut"],[3,"AxisIter"],[3,"AxisIterMut"],[3,"ExactChunks"],[3,"ExactChunksIter"],[3,"ExactChunksIterMut"],[3,"ExactChunksMut"],[3,"IndexedIter"],[3,"IndexedIterMut"],[3,"Iter"],[3,"IterMut"],[3,"Lanes"],[3,"LanesIter"],[3,"LanesIterMut"],[3,"LanesMut"],[3,"Windows"],[3,"Zip"],[3,"OwnedRepr"],[6,"IntegerIter"],[6,"RealIter"],[6,"LogicalIter"],[6,"ArrayView1"],[6,"ArrayView2"]]},\
"extendr_engine":{"doc":"A sigleton instance of the R interpreter.","i":[[5,"start_r","extendr_engine","",null,[[]]],[5,"end_r","","Close down the R interpreter. Note you won\'t be able to…",null,[[]]]],"p":[]},\
"extendr_macros":{"doc":"Macros for generating wrappers for rust functions.","i":[[23,"extendr","extendr_macros","Generate bindings for a single function.",null,null],[14,"extendr_module","","Define a module and export symbols to R Example:",null,null]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);