initSidebarItems({"fn":[["base_env","The base environment; formerly R_NilValue"],["base_namespace","The namespace for base."],["base_symbol","\"base\""],["blank_scalar_string","\"\" as a STRSXP"],["blank_string","\"\" as a CHARSXP"],["brace_symbol","\"{\""],["bracket_2_symbol","\"[[\""],["bracket_symbol","\"[\""],["class_symbol","\"class\""],["current_env","The current interpreter environment."],["device_symbol","\".Device\""],["dim_symbol","\"dim\""],["dimnames_symbol","\"dimnames\""],["dollar_symbol","\"$\""],["dot_defined","\".defined\""],["dot_method","\".Method\""],["dot_package_name","\"packageName\""],["dot_target","\".target\""],["dots_symbol","\"...\""],["double_colon_symbol","\"::\""],["empty_env","An empty environment at the root of the environment tree"],["find_namespace","Find a namespace by name."],["global_env","The \"global\" environment"],["global_function","Get a global function from global_env() and ancestors."],["global_var","Get a global variable from global_env() and ancestors. If the result is a promise, evaulate the promise."],["lastvalue_symbol","\".Last.value\""],["levels_symbol","\"levels\""],["local_var","Get a local variable from current_env() and ancestors."],["missing_arg","Missing argument marker"],["mode_symbol","\"mode\""],["na_rm_symbol","\"na.rm\""],["na_str","Special \"NA\" string that represents null strings."],["na_string","NA_STRING as a CHARSXP"],["name_symbol","\"name\""],["names_symbol","\"names\""],["namespace_env_symbol","NAMESPACE_.\""],["namespace_registry","For registered namespaces."],["new_env","Create a new, empty environment parented on global_env()"],["new_env_with_capacity","Create a new, empty environment parented on global_env() with a reserved size."],["nil_value","The nil object"],["package_symbol","\"package\""],["previous_symbol","\"previous\""],["quote_symbol","\"quote\""],["row_names_symbol","\"row.names\""],["seeds_symbol","\".Random.seed\""],["sort_list_symbol","\"sort.list\""],["source_symbol","\"source\""],["spec_symbol","\"spec\""],["srcref","Current srcref, for debuggers"],["triple_colon_symbol","\":::\""],["tsp_symbol","\"tsp\""],["unbound_value","Unbound marker"]]});